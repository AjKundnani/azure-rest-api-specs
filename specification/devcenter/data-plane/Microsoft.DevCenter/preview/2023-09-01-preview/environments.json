{
  "swagger": "2.0",
  "info": {
    "title": "DevCenter",
    "version": "2023-09-01-preview",
    "description": "DevCenter service",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/projects/{projectName}/catalogs": {
      "get": {
        "operationId": "EnvironmentsOperations_ListCatalogsByProject",
        "description": "Lists all of the catalogs available for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: 'top=10'.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedCatalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/catalogs/{catalogName}": {
      "get": {
        "operationId": "EnvironmentsOperations_GetCatalog",
        "description": "Gets the specified catalog within the project",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the catalog",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions": {
      "get": {
        "operationId": "EnvironmentsOperations_ListEnvironmentDefinitionsByCatalog",
        "description": "Lists all environment definitions available within a catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: 'top=10'.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the catalog",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions/{definitionName}": {
      "get": {
        "operationId": "EnvironmentsOperations_GetEnvironmentDefinition",
        "description": "Get an environment definition from a catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of the catalog",
            "required": true,
            "type": "string"
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the environment definition",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/projects/{projectName}/environmentDefinitions": {
      "get": {
        "operationId": "EnvironmentsOperations_ListEnvironmentDefinitionsByProject",
        "description": "Lists all environment definitions available for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: 'top=10'.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/environmentTypes": {
      "get": {
        "operationId": "EnvironmentsOperations_ListEnvironmentTypes",
        "description": "Lists all environment types configured for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: 'top=10'.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/environments": {
      "get": {
        "operationId": "EnvironmentsOperations_ListEnvironments",
        "description": "Lists the environments for a project.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: 'top=10'.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments": {
      "get": {
        "operationId": "EnvironmentsOperations_ListEnvironmentsByUser",
        "description": "Lists the environments for a project and user.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: 'top=10'.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the\nauthentication context.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}": {
      "get": {
        "operationId": "EnvironmentsOperations_GetEnvironmentByUser",
        "description": "Gets an environment",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the\nauthentication context.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "EnvironmentsOperations_CreateOrReplaceEnvironment",
        "description": "Creates or updates an environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the\nauthentication context.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Represents an environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "EnvironmentsOperations_DeleteEnvironment",
        "description": "Deletes an environment and all its associated resources",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the\nauthentication context.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/operations": {
      "get": {
        "operationId": "EnvironmentsOperations_ListOperations",
        "description": "Lists operations on the environment which have occurred within the past 90 days",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: 'top=10'.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "An OData filter clause to apply to the operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the\nauthentication context.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEnvironmentOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/operations/{operationId}": {
      "get": {
        "operationId": "EnvironmentsOperations_GetOperation",
        "description": "Gets an environment action result.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the\nauthentication context.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The id of the operation on an environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/projects/{projectName}/users/{userId}/environments/{environmentName}/operations/{operationId}/logs": {
      "get": {
        "operationId": "EnvironmentsOperations_GetLogsByOperation",
        "description": "Gets the logs for an operation on an environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "The DevCenter Project upon which to execute operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The AAD object id of the user. If value is 'me', the identity is taken from the\nauthentication context.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The id of the operation on an environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "accept",
            "in": "header",
            "description": "Accept header",
            "required": true,
            "type": "string",
            "enum": [
              "text/plain"
            ],
            "x-ms-enum": {
              "modelAsString": false
            },
            "x-ms-client-name": "Accept"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "APIVersions": {
      "type": "string",
      "description": "DevCenter API versions",
      "enum": [
        "2023-04-01",
        "2023-09-01-preview"
      ],
      "x-ms-enum": {
        "name": "APIVersions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_04_01",
            "value": "2023-04-01",
            "description": "The 2023-04-01 service API version"
          },
          {
            "name": "v2023_09_01_preview",
            "value": "2023-09-01-preview",
            "description": "The 2023-09-01-preview service API version"
          }
        ]
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Catalog": {
      "type": "object",
      "description": "A catalog.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the catalog."
        }
      },
      "required": [
        "name"
      ]
    },
    "CloudError": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Error body"
        }
      },
      "required": [
        "error"
      ]
    },
    "CloudErrorBody": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be\nconsumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user\ninterface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in\nerror."
        },
        "details": {
          "type": "array",
          "description": "A list of additional details about the error.",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Environment": {
      "type": "object",
      "description": "Properties of an environment.",
      "properties": {
        "parameters": {
          "description": "Parameters object for the environment."
        },
        "name": {
          "type": "string",
          "description": "Environment name.",
          "readOnly": true
        },
        "environmentType": {
          "type": "string",
          "description": "Environment type."
        },
        "user": {
          "type": "string",
          "description": "The AAD object id of the owner of this Environment.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the environment.",
          "readOnly": true
        },
        "resourceGroupId": {
          "type": "string",
          "description": "The identifier of the resource group containing the environment's resources.",
          "readOnly": true
        },
        "catalogName": {
          "type": "string",
          "description": "Name of the catalog."
        },
        "environmentDefinitionName": {
          "type": "string",
          "description": "Name of the environment definition."
        },
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Provisioning error details. Populated only for error states.",
          "readOnly": true
        }
      },
      "required": [
        "environmentType",
        "catalogName",
        "environmentDefinitionName"
      ]
    },
    "EnvironmentDefinition": {
      "type": "object",
      "description": "An environment definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the environment definition."
        },
        "name": {
          "type": "string",
          "description": "Name of the environment definition."
        },
        "catalogName": {
          "type": "string",
          "description": "Name of the catalog."
        },
        "description": {
          "type": "string",
          "description": "A short description of the environment definition."
        },
        "parameters": {
          "type": "array",
          "description": "Input parameters passed to an environment.",
          "items": {
            "$ref": "#/definitions/EnvironmentDefinitionParameter"
          }
        },
        "parametersSchema": {
          "type": "string",
          "description": "JSON schema defining the parameters object passed to an environment."
        },
        "templatePath": {
          "type": "string",
          "description": "Path to the Environment Definition entrypoint file."
        }
      },
      "required": [
        "id",
        "name",
        "catalogName"
      ]
    },
    "EnvironmentDefinitionParameter": {
      "type": "object",
      "description": "Properties of an Environment Definition parameter",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of the parameter"
        },
        "name": {
          "type": "string",
          "description": "Display name of the parameter"
        },
        "description": {
          "type": "string",
          "description": "Description of the parameter"
        },
        "default": {
          "type": "string",
          "description": "Default value of the parameter"
        },
        "type": {
          "$ref": "#/definitions/ParameterType",
          "description": "A string of one of the basic JSON types (number, integer, array, object,\nboolean, string)"
        },
        "readOnly": {
          "type": "boolean",
          "description": "Whether or not this parameter is read-only.  If true, default should have a\nvalue."
        },
        "required": {
          "type": "boolean",
          "description": "Whether or not this parameter is required"
        },
        "allowed": {
          "type": "array",
          "description": "An array of allowed values",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "type",
        "required"
      ]
    },
    "EnvironmentOperation": {
      "type": "object",
      "description": "Information about an operation on an environment.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Discriminator property for EnvironmentOperation."
        },
        "uri": {
          "type": "string",
          "description": "The unique URI for the environment operation."
        },
        "operationId": {
          "type": "string",
          "description": "Unique identifier for the environment operation."
        },
        "status": {
          "$ref": "#/definitions/EnvironmentOperationStatus",
          "description": "The operation status."
        },
        "createdByObjectId": {
          "type": "string",
          "description": "The object ID of the actor which initiated the operation."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the operation started."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the operation finished."
        },
        "environmentParameters": {
          "description": "Parameters object for the environment at the time of the operation."
        },
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Provisioning or operation error details. Populated only for error states."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind",
        "uri",
        "operationId",
        "status"
      ]
    },
    "EnvironmentOperationStatus": {
      "type": "string",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "EnvironmentOperationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "The operation has not started."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "The operation is running."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The operation succeeded."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The operation was canceled."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The operation failed."
          }
        ]
      }
    },
    "EnvironmentType": {
      "type": "object",
      "description": "Properties of an environment type.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the environment type"
        },
        "deploymentTargetId": {
          "type": "string",
          "description": "Id of a subscription or management group that the environment type will be\nmapped to. The environment's resources will be deployed into this subscription\nor management group."
        },
        "status": {
          "$ref": "#/definitions/EnvironmentTypeEnableStatus",
          "description": "Indicates whether this environment type is enabled for use in this project."
        }
      },
      "required": [
        "name",
        "deploymentTargetId",
        "status"
      ]
    },
    "EnvironmentTypeEnableStatus": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EnvironmentTypeEnableStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "The environment type is enabled for use in the project."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "The environment type is not enabled for use in the project."
          }
        ]
      }
    },
    "EnvironmentUpdateProperties": {
      "type": "object",
      "description": "Properties of an environment. These properties can be updated after the\nresource has been created.",
      "properties": {
        "parameters": {
          "description": "Parameters object for the environment."
        }
      }
    },
    "OperationStatus": {
      "type": "object",
      "description": "The current status of an async operation",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the operation status."
        },
        "name": {
          "type": "string",
          "description": "The operation id name"
        },
        "status": {
          "type": "string",
          "description": "Provisioning state of the resource."
        },
        "resourceId": {
          "type": "string",
          "description": "The id of the resource."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation"
        },
        "percentComplete": {
          "type": "number",
          "format": "float",
          "description": "Percent of the operation that is complete"
        },
        "properties": {
          "description": "Custom operation properties, populated only for a successful operation."
        },
        "error": {
          "$ref": "#/definitions/OperationStatusError",
          "description": "Operation Error message"
        }
      },
      "required": [
        "status"
      ]
    },
    "OperationStatusError": {
      "type": "object",
      "description": "Operation Error message",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      }
    },
    "PagedCatalog": {
      "type": "object",
      "description": "Results of the catalog list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Catalog items on this page",
          "items": {
            "$ref": "#/definitions/Catalog"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironment": {
      "type": "object",
      "description": "Results of the environment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Environment items on this page",
          "items": {
            "$ref": "#/definitions/Environment"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironmentDefinition": {
      "type": "object",
      "description": "Results of the environment definition list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnvironmentDefinition items on this page",
          "items": {
            "$ref": "#/definitions/EnvironmentDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironmentOperation": {
      "type": "object",
      "description": "The action results list result.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnvironmentOperation items on this page",
          "items": {
            "$ref": "#/definitions/EnvironmentOperation"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEnvironmentType": {
      "type": "object",
      "description": "Result of the environment type list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EnvironmentType items on this page",
          "items": {
            "$ref": "#/definitions/EnvironmentType"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ParameterType": {
      "type": "string",
      "enum": [
        "array",
        "boolean",
        "integer",
        "number",
        "object",
        "string"
      ],
      "x-ms-enum": {
        "name": "ParameterType",
        "modelAsString": true,
        "values": [
          {
            "name": "array",
            "value": "array",
            "description": "The parameter accepts an array of values."
          },
          {
            "name": "boolean",
            "value": "boolean",
            "description": "The parameter accepts a boolean value."
          },
          {
            "name": "integer",
            "value": "integer",
            "description": "The parameter accepts an integer value."
          },
          {
            "name": "number",
            "value": "number",
            "description": "The parameter accepts a number value."
          },
          {
            "name": "object",
            "value": "object",
            "description": "The parameter accepts an object value."
          },
          {
            "name": "string",
            "value": "string",
            "description": "The parameter accepts a string value."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
