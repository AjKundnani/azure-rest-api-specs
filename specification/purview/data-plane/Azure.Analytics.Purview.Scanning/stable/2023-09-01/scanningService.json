{
  "swagger": "2.0",
  "info": {
    "title": "MicrosoftScanningClient",
    "description": "Creates a Microsoft.Scanning management client.",
    "version": "2023-09-01"
  },
  "host": "purview.azure.com",
  "basePath": "/scan",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow."
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/endpoint"
      }
    ]
  },
  "paths": {
    "/azureKeyVaults/{azureKeyVaultName}": {
      "get": {
        "tags": [
          "AzureKeyVaults"
        ],
        "description": "Gets azureKeyVault connection.",
        "operationId": "KeyVaultConnections_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "azureKeyVaultName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVault"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "KeyVaultConnections_Get": {
            "$ref": "./examples/KeyVaultConnections_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "AzureKeyVaults"
        ],
        "description": "Creates or replaces a connection to azureKeyVault.",
        "operationId": "KeyVaultConnections_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/azureKeyVaultName"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureKeyVault"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVault"
            }
          },
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVault"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "KeyVaultConnections_CreateOrReplace": {
            "$ref": "./examples/KeyVaultConnections_CreateOrReplace.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AzureKeyVaults"
        ],
        "description": "Deletes the azureKeyVault associated with the account.",
        "operationId": "KeyVaultConnections_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "azureKeyVaultName",
            "required": true,
            "type": "string",
            "description": "The name of the azureKeyVault connection to delete."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "KeyVaultConnections_Delete": {
            "$ref": "./examples/KeyVaultConnections_Delete.json"
          }
        }
      }
    },
    "/azureKeyVaults": {
      "get": {
        "tags": [
          "AzureKeyVaults"
        ],
        "description": "List azureKeyVaults in account.",
        "operationId": "KeyVaultConnections_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultList"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "KeyVaultConnections_ListAll": {
            "$ref": "./examples/KeyVaultConnections_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/classificationrules/{classificationRuleName}": {
      "get": {
        "tags": [
          "ClassificationRules"
        ],
        "description": "Get a classification rule.",
        "operationId": "ClassificationRules_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "classificationRuleName",
            "required": true,
            "type": "string",
            "description": "The name of the classification rule to retrieve."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ClassificationRule"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ClassificationRules_Get": {
            "$ref": "./examples/ClassificationRules_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ClassificationRules"
        ],
        "description": "Creates or replaces a classification rule.",
        "operationId": "ClassificationRules_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/classificationRuleName"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ClassificationRule"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ClassificationRule"
            }
          },
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ClassificationRule"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ClassificationRules_CreateOrReplace": {
            "$ref": "./examples/ClassificationRules_CreateOrReplace.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ClassificationRules"
        ],
        "description": "Deletes a classification rule.",
        "operationId": "ClassificationRules_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "classificationRuleName",
            "required": true,
            "type": "string",
            "description": "The name of the classification rule to delete."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ClassificationRules_Delete": {
            "$ref": "./examples/ClassificationRules_Delete.json"
          }
        }
      }
    },
    "/classificationrules": {
      "get": {
        "tags": [
          "ClassificationRules"
        ],
        "description": "List classification rules in Account.",
        "operationId": "ClassificationRules_ListAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ClassificationRuleList"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ClassificationRules_ListAll": {
            "$ref": "./examples/ClassificationRules_ListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/classificationrules/{classificationRuleName}/versions": {
      "get": {
        "tags": [
          "ClassificationRules"
        ],
        "description": "Lists the rule versions of a classification rule.",
        "operationId": "ClassificationRules_ListVersionsByRuleName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "classificationRuleName",
            "required": true,
            "type": "string",
            "description": "The name of the classification rule to retrieve."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ClassificationRuleList"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ClassificationRules_ListVersionsByRuleName": {
            "$ref": "./examples/ClassificationRules_ListVersionsByRuleName.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/classificationrules/{classificationRuleName}/versions/{classificationRuleVersion}:tag": {
      "post": {
        "tags": [
          "ClassificationRules"
        ],
        "description": "Sets Classification Action on a specific classification rule version.",
        "operationId": "ClassificationRules_TagClassificationVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "classificationRuleName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "classificationRuleVersion",
            "required": true,
            "type": "integer",
            "description": "The version of the classification rule to retrieve.",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "action",
            "required": true,
            "type": "string",
            "description": "The action to take on the classification rule version.",
            "enum": [
              "Keep",
              "Delete"
            ],
            "x-ms-enum": {
              "name": "ClassificationAction",
              "modelAsString": true
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ClassificationRules_TagClassificationVersion": {
            "$ref": "./examples/ClassificationRules_TagClassificationVersion.json"
          }
        }
      }
    },
    "/credentials/{credentialName}": {
      "get": {
        "tags": [
          "Credential"
        ],
        "description": "Gets credential information.",
        "operationId": "Credential_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "credentialName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "Credential_Get": {
            "$ref": "./examples/Credential_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Credential"
        ],
        "description": "Creates or replaces an instance of a credential.",
        "operationId": "Credential_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/credentialName"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "Credential_CreateOrReplace": {
            "$ref": "./examples/Credential_CreateOrReplace.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Credential"
        ],
        "description": "Deletes the credentials associated with the account.",
        "operationId": "Credential_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "credentialName",
            "required": true,
            "type": "string",
            "description": "The name of the credential to delete."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Credential_Delete": {
            "$ref": "./examples/Credential_Delete.json"
          }
        }
      }
    },
    "/credentials": {
      "get": {
        "tags": [
          "Credential"
        ],
        "description": "List credentials in account.",
        "operationId": "Credential_ListAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CredentialList"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "Credential_ListAll": {
            "$ref": "./examples/Credential_ListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/datasources/{dataSourceName}": {
      "put": {
        "tags": [
          "DataSources"
        ],
        "description": "Creates or replaces a data source.",
        "operationId": "DataSources_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/dataSourceName"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DataSource"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/DataSource"
            }
          },
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/DataSource"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "DataSources_CreateOrReplace": {
            "$ref": "./examples/DataSources_CreateOrReplace.json"
          }
        }
      },
      "get": {
        "tags": [
          "DataSources"
        ],
        "description": "Get a data source.",
        "operationId": "DataSources_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "The name of the data source to retrieve."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/DataSource"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "DataSources_Get": {
            "$ref": "./examples/DataSources_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataSources"
        ],
        "description": "Deletes a data source.",
        "operationId": "DataSources_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "The name of the data source to delete."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "DataSources_Delete": {
            "$ref": "./examples/DataSources_Delete.json"
          }
        }
      }
    },
    "/datasources": {
      "get": {
        "tags": [
          "DataSources"
        ],
        "description": "List data sources in Data catalog.",
        "operationId": "DataSources_ListAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/DataSourceList"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "DataSources_ListAll": {
            "$ref": "./examples/DataSources_ListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/datasources/{dataSourceName}/scans/{scanName}/filters/custom": {
      "get": {
        "tags": [
          "Filters"
        ],
        "description": "Get a filter.",
        "operationId": "Filters_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "The name of the data source to retrieve."
          },
          {
            "in": "path",
            "name": "scanName",
            "required": true,
            "type": "string",
            "description": "The name of the scan to retrieve."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "Filters_Get": {
            "$ref": "./examples/Filters_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Filters"
        ],
        "description": "Creates or replaces a filter.",
        "operationId": "Filters_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/dataSourceName"
          },
          {
            "$ref": "#/parameters/scanName"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          },
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "Filters_CreateOrReplace": {
            "$ref": "./examples/Filters_CreateOrReplace.json"
          }
        }
      }
    },
    "/integrationruntimes": {
      "get": {
        "tags": [
          "IntegrationRuntimes"
        ],
        "description": "Lists integration runtimes in an account.",
        "operationId": "IntegrationRuntimes_ListByAccount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeList"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "IntegrationRuntimes_ListByAccount": {
            "$ref": "./examples/IntegrationRuntimes_ListByAccount.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/integrationruntimes/{integrationRuntimeName}": {
      "get": {
        "tags": [
          "IntegrationRuntimes"
        ],
        "description": "Gets an integration runtime.",
        "operationId": "IntegrationRuntimes_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntime"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "IntegrationRuntimes_Get": {
            "$ref": "./examples/IntegrationRuntimes_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "IntegrationRuntimes"
        ],
        "description": "Deletes an integration runtime.",
        "operationId": "IntegrationRuntimes_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IntegrationRuntimes_Delete": {
            "$ref": "./examples/IntegrationRuntimes_Delete.json"
          }
        }
      },
      "put": {
        "tags": [
          "IntegrationRuntimes"
        ],
        "description": "Creates or replaces an instance of integration runtime.",
        "operationId": "IntegrationRuntimes_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationRuntime"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntime"
            }
          },
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntime"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "IntegrationRuntimes_CreateOrReplace": {
            "$ref": "./examples/IntegrationRuntimes_CreateOrReplace.json"
          }
        }
      }
    },
    "/integrationruntimes/{integrationRuntimeName}/status": {
      "get": {
        "tags": [
          "IntegrationRuntimes"
        ],
        "description": "Gets detailed status information for an integration runtime.",
        "operationId": "IntegrationRuntimes_Status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeStatus"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "IntegrationRuntimes_Status": {
            "$ref": "./examples/IntegrationRuntimes_Status.json"
          }
        }
      }
    },
    "/integrationruntimes/{integrationRuntimeName}:listAuthKeys": {
      "post": {
        "tags": [
          "IntegrationRuntimes"
        ],
        "description": "Retrieves the authentication keys for an integration runtime.",
        "operationId": "IntegrationRuntimes_ListAuthKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeAuthKeys"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "IntegrationRuntimes_ListAuthKeys": {
            "$ref": "./examples/IntegrationRuntimes_ListAuthKeys.json"
          }
        }
      }
    },
    "/integrationruntimes/{integrationRuntimeName}:regenerateAuthKey": {
      "post": {
        "tags": [
          "IntegrationRuntimes"
        ],
        "description": "Regenerates the authentication key for an integration runtime.",
        "operationId": "IntegrationRuntimes_RegenerateAuthKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/integrationRuntimeName",
            "description": "The name of the integration runtime to retrieve."
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeRegenerateKeyParameters",
              "description": "The request of regenerating auth key for integration runtime."
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeAuthKeys"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "IntegrationRuntimes_RegenerateAuthKey": {
            "$ref": "./examples/IntegrationRuntimes_RegenerateAuthKey.json"
          }
        }
      }
    },
    "/integrationruntimes/{integrationRuntimeName}:disableInteractiveQuery": {
      "post": {
        "tags": [
          "IntegrationRuntimes"
        ],
        "description": "Disables interactive querying.",
        "operationId": "IntegrationRuntimes_DisableInteractiveQuery",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/integrationRuntimeName",
            "description": "The name of the integration runtime to retrieve."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "IntegrationRuntimes_DisableInteractiveQuery": {
            "$ref": "./examples/IntegrationRuntimes_DisableInteractiveQuery.json"
          }
        }
      }
    },
    "/integrationruntimes/{integrationRuntimeName}:enableInteractiveQuery": {
      "post": {
        "tags": [
          "IntegrationRuntimes"
        ],
        "description": "Enables interactive querying.",
        "operationId": "IntegrationRuntimes_EnableInteractiveQuery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "description": "The request of enabling interactive query for integration runtime.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnableInteractiveQueryForIntegrationRuntimeRequest"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "Success."
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "IntegrationRuntimes_EnableInteractiveQuery": {
            "$ref": "./examples/IntegrationRuntimes_EnableInteractiveQuery.json"
          }
        }
      }
    },
    "/managedvirtualnetworks": {
      "get": {
        "tags": [
          "ManagedVirtualNetworks"
        ],
        "description": "Lists managed virtual networks in an account.",
        "operationId": "ManagedVirtualNetworks_ListByAccount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ManagedVirtualNetworkList"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ManagedVirtualNetworks_ListByAccount": {
            "$ref": "./examples/ManagedVirtualNetworks_ListByAccount.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/managedvirtualnetworks/{managedVirtualNetworkName}": {
      "get": {
        "tags": [
          "ManagedVirtualNetworks"
        ],
        "description": "Gets a managed virtual network.",
        "operationId": "ManagedVirtualNetworks_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ManagedVirtualNetwork"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ManagedVirtualNetworks_Get": {
            "$ref": "./examples/ManagedVirtualNetworks_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedVirtualNetworks"
        ],
        "description": "Creates or replaces a managed virtual network.",
        "operationId": "ManagedVirtualNetworks_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/managedVirtualNetworkName"
          },
          {
            "description": "Managed virtual network resource definition.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedVirtualNetwork"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ManagedVirtualNetwork"
            }
          },
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ManagedVirtualNetwork"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ManagedVirtualNetworks_CreateOrReplace": {
            "$ref": "./examples/ManagedVirtualNetworks_CreateOrReplace.json"
          }
        }
      }
    },
    "/managedvirtualnetworks/{managedVirtualNetworkName}/managedprivateendpoints": {
      "get": {
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "description": "Lists managed private endpoints under a managed virtual network.",
        "operationId": "ManagedPrivateEndpoints_ListByAccount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ManagedPrivateEndpointList"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ManagedPrivateEndpoints_ListByAccount": {
            "$ref": "./examples/ManagedPrivateEndpoints_ListByAccount.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/managedvirtualnetworks/{managedVirtualNetworkName}/managedprivateendpoints/{managedPrivateEndpointName}": {
      "get": {
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "description": "Gets a managed private endpoint.",
        "operationId": "ManagedPrivateEndpoints_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/parameters/managedPrivateEndpointName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ManagedPrivateEndpoint"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ManagedPrivateEndpoints_Get": {
            "$ref": "./examples/ManagedPrivateEndpoints_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "description": "Deletes a managed private endpoint.",
        "operationId": "ManagedPrivateEndpoints_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/parameters/managedPrivateEndpointName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ManagedPrivateEndpoints_Delete": {
            "$ref": "./examples/ManagedPrivateEndpoints_Delete.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "description": "Creates or replaces a managed private endpoint.",
        "operationId": "ManagedPrivateEndpoints_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/parameters/managedPrivateEndpointName"
          },
          {
            "description": "Managed private endpoint resource definition.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedPrivateEndpoint"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ManagedPrivateEndpoint"
            }
          },
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ManagedPrivateEndpoint"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ManagedPrivateEndpoints_CreateOrReplace": {
            "$ref": "./examples/ManagedPrivateEndpoints_CreateOrReplace.json"
          }
        }
      }
    },
    "/datasources/{dataSourceName}/scans/{scanName}": {
      "put": {
        "tags": [
          "Scan"
        ],
        "description": "Creates or replaces an instance of a scan.",
        "operationId": "Scans_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/dataSourceName"
          },
          {
            "$ref": "#/parameters/scanName"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Scan"
            },
            "description": "The scan definition."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Scan"
            }
          },
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Scan"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "Scans_CreateOrReplace": {
            "$ref": "./examples/Scans_CreateOrReplace.json"
          }
        }
      },
      "get": {
        "tags": [
          "Scan"
        ],
        "description": "Gets a scan information.",
        "operationId": "Scans_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "data source name"
          },
          {
            "in": "path",
            "name": "scanName",
            "required": true,
            "type": "string",
            "description": "scan name"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Scan"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "Scans_Get": {
            "$ref": "./examples/Scans_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Scan"
        ],
        "description": "Deletes the scan associated with the data source.",
        "operationId": "Scans_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "data source name"
          },
          {
            "in": "path",
            "name": "scanName",
            "required": true,
            "type": "string",
            "description": "scan name"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Scans_Delete": {
            "$ref": "./examples/Scans_Delete.json"
          }
        }
      }
    },
    "/datasources/{dataSourceName}/scans": {
      "get": {
        "tags": [
          "Scan"
        ],
        "description": "List scans in data source.",
        "operationId": "Scans_ListByDataSource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "data source name"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ScanList"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "Scans_ListByDataSource": {
            "$ref": "./examples/Scans_ListByDataSource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/datasources/{dataSourceName}/scans/{scanName}/runs/{runId}": {
      "put": {
        "tags": [
          "ScanResult"
        ],
        "description": "Runs the scan.",
        "operationId": "ScanResult_RunScan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/dataSourceName"
          },
          {
            "$ref": "#/parameters/scanName"
          },
          {
            "$ref": "#/parameters/runId"
          },
          {
            "in": "query",
            "name": "scanLevel",
            "type": "string",
            "description": "scan level",
            "enum": [
              "Full",
              "Incremental"
            ],
            "x-ms-enum": {
              "name": "ScanLevelType",
              "modelAsString": true
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ScanResult_RunScan": {
            "$ref": "./examples/ScanResult_RunScan.json"
          }
        }
      },
      "get": {
        "tags": [
          "ScanResult"
        ],
        "description": "Get the status of the scan run with ingestion details.",
        "operationId": "ScanResult_GetScanStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "data source name"
          },
          {
            "in": "path",
            "name": "scanName",
            "required": true,
            "type": "string",
            "description": "scan name"
          },
          {
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string",
            "description": "run id"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ScanResultWithIngestion"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ScanResult_GetScanStatus": {
            "$ref": "./examples/ScanResult_GetScanStatus.json"
          }
        }
      }
    },
    "/datasources/{dataSourceName}/scans/{scanName}/runs/{runId}:cancel": {
      "post": {
        "tags": [
          "ScanResult"
        ],
        "description": "Cancels a scan.",
        "operationId": "ScanResult_CancelScan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "data source name"
          },
          {
            "in": "path",
            "name": "scanName",
            "required": true,
            "type": "string",
            "description": "scan name"
          },
          {
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string",
            "description": "run id"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ScanResult_CancelScan": {
            "$ref": "./examples/ScanResult_CancelScan.json"
          }
        }
      }
    },
    "/datasources/{dataSourceName}/scans/{scanName}/runs": {
      "get": {
        "tags": [
          "ScanResult"
        ],
        "description": "Lists the scan history of a scan.",
        "operationId": "ScanResult_ListScanHistory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "data source name"
          },
          {
            "in": "path",
            "name": "scanName",
            "required": true,
            "type": "string",
            "description": "scan name"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ScanHistoryListWithIngestion"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ScanResult_ListScanHistory": {
            "$ref": "./examples/ScanResult_ListScanHistory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/scanrulesets/{scanRulesetName}": {
      "get": {
        "tags": [
          "ScanRulesets"
        ],
        "description": "Get a scan ruleset.",
        "operationId": "ScanRulesets_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanRulesetName",
            "required": true,
            "type": "string",
            "description": "scan ruleset name"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ScanRuleset"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ScanRulesets_Get": {
            "$ref": "./examples/ScanRulesets_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ScanRulesets"
        ],
        "description": "Creates or replaces a scan ruleset.",
        "operationId": "ScanRulesets_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/scanRulesetName"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ScanRuleset"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ScanRuleset"
            }
          },
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ScanRuleset"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ScanRulesets_CreateOrReplace": {
            "$ref": "./examples/ScanRulesets_CreateOrReplace.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ScanRulesets"
        ],
        "description": "Deletes a scan ruleset.",
        "operationId": "ScanRulesets_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanRulesetName",
            "required": true,
            "type": "string",
            "description": "scan rule set name"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ScanRulesets_Delete": {
            "$ref": "./examples/ScanRulesets_Delete.json"
          }
        }
      }
    },
    "/scanrulesets": {
      "get": {
        "tags": [
          "ScanRulesets"
        ],
        "description": "List scan rulesets in Data catalog.",
        "operationId": "ScanRulesets_ListAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ScanRulesetList"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "ScanRulesets_ListAll": {
            "$ref": "./examples/ScanRulesets_ListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/systemScanRulesets": {
      "get": {
        "tags": [
          "SystemScanRulesets"
        ],
        "description": "List all system scan rulesets for an account.",
        "operationId": "SystemScanRulesets_ListAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SystemScanRulesetList"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "SystemScanRulesets_ListAll": {
            "$ref": "./examples/SystemScanRulesets_ListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/systemScanRulesets/datasources/{dataSourceType}": {
      "get": {
        "tags": [
          "SystemScanRulesets"
        ],
        "description": "Get a system scan ruleset for a data source.",
        "operationId": "SystemScanRulesets_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceType",
            "required": true,
            "type": "string",
            "description": "data source type",
            "enum": [
              "None",
              "AzureSubscription",
              "AzureResourceGroup",
              "AzureSynapseWorkspace",
              "AzureSynapse",
              "AdlsGen1",
              "AdlsGen2",
              "AmazonAccount",
              "AmazonS3",
              "AmazonSql",
              "AzureCosmosDb",
              "AzureDataExplorer",
              "AzureFileService",
              "AzureSqlDatabase",
              "AmazonPostgreSql",
              "AzurePostgreSql",
              "SqlServerDatabase",
              "AzureSqlDatabaseManagedInstance",
              "AzureSqlDataWarehouse",
              "AzureMySql",
              "AzureStorage",
              "Teradata",
              "Oracle",
              "SapS4Hana",
              "SapEcc",
              "PowerBI"
            ],
            "x-ms-enum": {
              "name": "DataSourceType",
              "modelAsString": true
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SystemScanRuleset"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "SystemScanRulesets_Get": {
            "$ref": "./examples/SystemScanRulesets_Get.json"
          }
        }
      }
    },
    "/systemScanRulesets/versions/{version}": {
      "get": {
        "tags": [
          "SystemScanRulesets"
        ],
        "description": "Get a scan ruleset by version.",
        "operationId": "SystemScanRulesets_GetByVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "dataSourceType",
            "type": "string",
            "description": "data source type",
            "enum": [
              "None",
              "AzureSubscription",
              "AzureResourceGroup",
              "AzureSynapseWorkspace",
              "AzureSynapse",
              "AdlsGen1",
              "AdlsGen2",
              "AmazonAccount",
              "AmazonS3",
              "AmazonSql",
              "AzureCosmosDb",
              "AzureDataExplorer",
              "AzureFileService",
              "AzureSqlDatabase",
              "AmazonPostgreSql",
              "AzurePostgreSql",
              "SqlServerDatabase",
              "AzureSqlDatabaseManagedInstance",
              "AzureSqlDataWarehouse",
              "AzureMySql",
              "AzureStorage",
              "Teradata",
              "Oracle",
              "SapS4Hana",
              "SapEcc",
              "PowerBI"
            ],
            "x-ms-enum": {
              "name": "DataSourceType",
              "modelAsString": true
            }
          },
          {
            "in": "path",
            "name": "version",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SystemScanRuleset"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "SystemScanRulesets_GetByVersion": {
            "$ref": "./examples/SystemScanRulesets_GetByVersion.json"
          }
        }
      }
    },
    "/systemScanRulesets/versions/latest": {
      "get": {
        "tags": [
          "SystemScanRulesets"
        ],
        "description": "Get the latest version of a system scan ruleset.",
        "operationId": "SystemScanRulesets_GetLatest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "dataSourceType",
            "type": "string",
            "description": "data source type",
            "enum": [
              "None",
              "AzureSubscription",
              "AzureResourceGroup",
              "AzureSynapseWorkspace",
              "AzureSynapse",
              "AdlsGen1",
              "AdlsGen2",
              "AmazonAccount",
              "AmazonS3",
              "AmazonSql",
              "AzureCosmosDb",
              "AzureDataExplorer",
              "AzureFileService",
              "AzureSqlDatabase",
              "AmazonPostgreSql",
              "AzurePostgreSql",
              "SqlServerDatabase",
              "AzureSqlDatabaseManagedInstance",
              "AzureSqlDataWarehouse",
              "AzureMySql",
              "AzureStorage",
              "Teradata",
              "Oracle",
              "SapS4Hana",
              "SapEcc",
              "PowerBI"
            ],
            "x-ms-enum": {
              "name": "DataSourceType",
              "modelAsString": true
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SystemScanRuleset"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "SystemScanRulesets_GetLatest": {
            "$ref": "./examples/SystemScanRulesets_GetLatest.json"
          }
        }
      }
    },
    "/systemScanRulesets/versions": {
      "get": {
        "tags": [
          "SystemScanRulesets"
        ],
        "description": "List system scan ruleset versions in Data catalog.",
        "operationId": "SystemScanRulesets_ListVersionsByDataSource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "dataSourceType",
            "type": "string",
            "description": "data source type",
            "enum": [
              "None",
              "AzureSubscription",
              "AzureResourceGroup",
              "AzureSynapseWorkspace",
              "AzureSynapse",
              "AdlsGen1",
              "AdlsGen2",
              "AmazonAccount",
              "AmazonS3",
              "AmazonSql",
              "AzureCosmosDb",
              "AzureDataExplorer",
              "AzureFileService",
              "AzureSqlDatabase",
              "AmazonPostgreSql",
              "AzurePostgreSql",
              "SqlServerDatabase",
              "AzureSqlDatabaseManagedInstance",
              "AzureSqlDataWarehouse",
              "AzureMySql",
              "AzureStorage",
              "Teradata",
              "Oracle",
              "SapS4Hana",
              "SapEcc",
              "PowerBI"
            ],
            "x-ms-enum": {
              "name": "DataSourceType",
              "modelAsString": true
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SystemScanRulesetList"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "SystemScanRulesets_ListVersionsByDataSource": {
            "$ref": "./examples/SystemScanRulesets_ListVersionsByDataSource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/datasources/{dataSourceName}/scans/{scanName}/triggers/default": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "description": "Gets trigger information.",
        "operationId": "Triggers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "data source name"
          },
          {
            "in": "path",
            "name": "scanName",
            "required": true,
            "type": "string",
            "description": "scan name"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "Triggers_Get": {
            "$ref": "./examples/Triggers_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Triggers"
        ],
        "description": "Creates or replaces an instance of a trigger.",
        "operationId": "Triggers_CreateOrReplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/dataSourceName"
          },
          {
            "$ref": "#/parameters/scanName"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "Triggers_CreateOrReplace": {
            "$ref": "./examples/Triggers_CreateOrReplace.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Triggers"
        ],
        "description": "Deletes the trigger associated with the scan.",
        "operationId": "Triggers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "data source name"
          },
          {
            "in": "path",
            "name": "scanName",
            "required": true,
            "type": "string",
            "description": "scan name"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Triggers_Delete": {
            "$ref": "./examples/Triggers_Delete.json"
          }
        }
      }
    },
    "/datasources/{dataSourceName}/scans/{scanName}/triggers/default:enable": {
      "post": {
        "tags": [
          "Triggers"
        ],
        "description": "Enables a trigger.",
        "operationId": "Triggers_Enable",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "data source name"
          },
          {
            "in": "path",
            "name": "scanName",
            "required": true,
            "type": "string",
            "description": "scan name"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "Triggers_Enable": {
            "$ref": "./examples/Triggers_Enable.json"
          }
        }
      }
    },
    "/datasources/{dataSourceName}/scans/{scanName}/triggers/default:disable": {
      "post": {
        "tags": [
          "Triggers"
        ],
        "description": "Disables a trigger.",
        "operationId": "Triggers_Disable",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceName",
            "required": true,
            "type": "string",
            "description": "data source name"
          },
          {
            "in": "path",
            "name": "scanName",
            "required": true,
            "type": "string",
            "description": "scan name"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "default": {
            "description": "An error response received from the Scanning Service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "x-ms-examples": {
          "Triggers_Disable": {
            "$ref": "./examples/Triggers_Disable.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AzureKeyVaultProperties": {
      "type": "object",
      "properties": {
        "baseUrl": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ProxyResource": {
      "description": "The proxy resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The resource name.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AzureKeyVault": {
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureKeyVaultProperties"
            }
          ]
        }
      }
    },
    "ErrorModel": {
      "description": "The error model.",
      "type": "object",
      "properties": {
        "code": {
          "description": "A unique error code that identifies the specific error.",
          "type": "string"
        },
        "message": {
          "description": "A human-readable error message that provides more details about the error.",
          "type": "string"
        },
        "target": {
          "description": "The specific component that the error is associated with.",
          "type": "string"
        },
        "details": {
          "description": "An array of nested ErrorModel objects that provides additional error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorModel"
          }
        }
      }
    },
    "ErrorResponseModel": {
      "description": "The error response model.",
      "type": "object",
      "properties": {
        "error": {
          "items": {
            "$ref": "#/definitions/ErrorModel"
          }
        }
      }
    },
    "AzureKeyVaultList": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Azure Key Vault connections.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureKeyVault"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        },
        "count": {
          "description": "The number of Azure Key Vault connections.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ClassificationRule": {
      "required": [
        "kind"
      ],
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "kind": {
          "enum": [
            "System",
            "Custom"
          ],
          "type": "string",
          "description": "The kind of classification rule.",
          "x-ms-enum": {
            "name": "ClassificationRuleType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "ClassificationRuleList": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of classification rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClassificationRule"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        },
        "count": {
          "description": "The number of classification rules.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ErrorInfo": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "A unique error code that identifies the specific error."
        },
        "message": {
          "type": "string",
          "description": "A human-readable error message that provides more details about the error."
        },
        "target": {
          "type": "string",
          "description": "The specific component that the error is associated with."
        },
        "details": {
          "type": "array",
          "description": "error info detail",
          "items": {
            "$ref": "#/definitions/ErrorInfo"
          }
        }
      }
    },
    "OperationResponse": {
      "type": "object",
      "properties": {
        "scanResultId": {
          "format": "uuid",
          "type": "string",
          "description": "The scan result identifier."
        },
        "startTime": {
          "format": "date-time",
          "type": "string",
          "description": "The start time of the operation."
        },
        "endTime": {
          "format": "date-time",
          "type": "string",
          "description": "The end time of the operation"
        },
        "status": {
          "enum": [
            "Accepted",
            "InProgress",
            "TransientFailure",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "description": "operation status",
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": true
          }
        },
        "error": {
          "items": [
            {
              "$ref": "#/definitions/ErrorInfo"
            }
          ]
        }
      }
    },
    "Credential": {
      "required": [
        "kind"
      ],
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "kind": {
          "enum": [
            "AccountKey",
            "ServicePrincipal",
            "BasicAuth",
            "SqlAuth",
            "AmazonARN",
            "ConsumerKeyAuth",
            "DelegatedAuth",
            "ManagedIdentity"
          ],
          "type": "string",
          "description": "The kind of credential.",
          "x-ms-enum": {
            "name": "CredentialType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "CredentialList": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of credentials.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Credential"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        },
        "count": {
          "description": "The number of credentials.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Notification": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "notification message"
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "notification code"
        }
      }
    },
    "ScanDiagnostics": {
      "type": "object",
      "properties": {
        "notifications": {
          "type": "array",
          "description": "notifications",
          "items": {
            "$ref": "#/definitions/Notification"
          }
        },
        "exceptionCountMap": {
          "type": "object",
          "description": "exception count map",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "readOnly": true
        }
      }
    },
    "ScanResult": {
      "type": "object",
      "properties": {
        "assetsDiscovered": {
          "format": "int64",
          "type": "integer",
          "readOnly": true,
          "description": "The number of assets discovered."
        },
        "assetsClassified": {
          "format": "int64",
          "type": "integer",
          "readOnly": true,
          "description": "The number of assets classified."
        },
        "queuedTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true,
          "description": "The time the scan was queued."
        },
        "pipelineStartTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true,
          "description": "The time the scan started."
        },
        "isErrorLogAvailable": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates whether the error log is available."
        },
        "parentId": {
          "type": "string",
          "readOnly": true,
          "description": "The parent scan result identifier."
        },
        "ingestionJobId": {
          "type": "string",
          "readOnly": true,
          "description": "The ingestion job identifier."
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The scan result identifier."
        },
        "resourceId": {
          "type": "string",
          "readOnly": true,
          "description": "The resource identifier."
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "The scan result status."
        },
        "diagnostics": {
          "items": [
            {
              "$ref": "#/definitions/ScanDiagnostics"
            }
          ],
          "readOnly": true,
          "description": "The scan diagnostics."
        },
        "startTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true,
          "description": "The scan start time."
        },
        "endTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true,
          "description": "The scan end time."
        },
        "scanRulesetVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "The scan ruleset version."
        },
        "scanRulesetType": {
          "enum": [
            "Custom",
            "System"
          ],
          "type": "string",
          "description": "The scan ruleset type.",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ScanRulesetType",
            "modelAsString": true
          }
        },
        "scanLevelType": {
          "enum": [
            "Full",
            "Incremental"
          ],
          "type": "string",
          "description": "scan level type",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ScanLevelType",
            "modelAsString": true
          }
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true,
          "description": "The error message."
        },
        "error": {
          "items": [
            {
              "$ref": "#/definitions/ErrorModel"
            }
          ],
          "readOnly": true
        },
        "runType": {
          "type": "string",
          "readOnly": true,
          "description": "The run type."
        },
        "dataSourceType": {
          "enum": [
            "None",
            "Fabric",
            "AzureSubscription",
            "AzureResourceGroup",
            "AzureSynapseWorkspace",
            "AzureSynapse",
            "AdlsGen1",
            "AdlsGen2",
            "AmazonAccount",
            "AmazonS3",
            "AmazonSql",
            "AzureCosmosDb",
            "AzureDataExplorer",
            "AzureFileService",
            "AzureSqlDatabase",
            "ArcEnabledSqlServer",
            "AmazonPostgreSql",
            "AzurePostgreSql",
            "Databricks",
            "SqlServerDatabase",
            "AzureSqlDatabaseManagedInstance",
            "AzureSqlDataWarehouse",
            "AzureMySql",
            "Hdfs",
            "TableauServer",
            "AzureStorage",
            "Teradata",
            "Oracle",
            "PostgreSql",
            "AmazonRedShift",
            "DatabricksHms",
            "SapS4Hana",
            "SapEcc",
            "Snowflake",
            "PowerBI",
            "Trident",
            "Dataverse",
            "DatabricksUnityCatalog"
          ],
          "type": "string",
          "description": "The properties of datasource, vary by datasource type.",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true
          }
        }
      }
    },
    "DiscoveryExecutionDetails": {
      "type": "object",
      "properties": {
        "discoveryStartTime": {
          "format": "date-time",
          "type": "string",
          "description": "The discovery start time."
        },
        "discoveryEndTime": {
          "format": "date-time",
          "type": "string",
          "description": "The discovery end time."
        },
        "status": {
          "enum": [
            "Queued",
            "Running",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Delayed",
            "Throttled",
            "CompletedWithExceptions",
            "CompleteWithWarning"
          ],
          "type": "string",
          "description": "The discovery status.",
          "x-ms-enum": {
            "name": "ScanStatus",
            "modelAsString": true
          }
        },
        "statistics": {
          "type": "object",
          "description": "The discovery statistics.",
          "additionalProperties": {
            "type": "object"
          }
        },
        "isErrorLogAvailable": {
          "type": "boolean",
          "description": "Indicates whether the error log is available."
        }
      }
    },
    "IngestionExecutionDetails": {
      "type": "object",
      "properties": {
        "ingestionStartTime": {
          "format": "date-time",
          "type": "string",
          "description": "The ingestion start time."
        },
        "ingestionEndTime": {
          "format": "date-time",
          "type": "string",
          "description": "The ingestion end time."
        },
        "status": {
          "enum": [
            "None",
            "Succeeded",
            "Queued",
            "InProgress",
            "SourceUnknown",
            "PartialSucceeded",
            "Failed",
            "Canceled",
            "Canceling"
          ],
          "type": "string",
          "description": "The ingestion status.",
          "x-ms-enum": {
            "name": "IngestionPhaseStatus",
            "modelAsString": true
          }
        },
        "statistics": {
          "type": "object",
          "description": "The ingestion statistics.",
          "additionalProperties": {
            "type": "object"
          }
        },
        "estimatedTimeRemainingInSeconds": {
          "format": "int64",
          "description": "The estimated time remaining in seconds.",
          "type": "integer"
        },
        "isErrorLogAvailable": {
          "type": "boolean",
          "description": "Indicates whether the error log is available."
        },
        "lastUpdatedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The last updated time."
        }
      }
    },
    "ScanResultWithIngestion": {
      "type": "object",
      "description": "The scan result with ingestion.",
      "properties": {
        "discoveryExecutionDetails": {
          "items": [
            {
              "$ref": "#/definitions/DiscoveryExecutionDetails"
            }
          ],
          "readOnly": true,
          "description": "The discovery execution details."
        },
        "ingestionExecutionDetails": {
          "items": [
            {
              "$ref": "#/definitions/IngestionExecutionDetails"
            }
          ],
          "readOnly": true,
          "description": "The ingestion execution details."
        },
        "parentId": {
          "type": "string",
          "readOnly": true,
          "description": "The parent scan result identifier."
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The scan result identifier."
        },
        "ingestionJobId": {
          "type": "string",
          "description": "The ingestion job identifier."
        },
        "resourceId": {
          "type": "string",
          "readOnly": true,
          "description": "The resource identifier."
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "The scan result status."
        },
        "diagnostics": {
          "items": [
            {
              "$ref": "#/definitions/ScanDiagnostics"
            }
          ],
          "readOnly": true,
          "description": "The scan diagnostics."
        },
        "startTime": {
          "format": "date-time",
          "type": "string",
          "description": "The scan start time.",
          "readOnly": true
        },
        "endTime": {
          "format": "date-time",
          "type": "string",
          "description": "The scan end time.",
          "readOnly": true
        },
        "scanRulesetVersion": {
          "format": "int32",
          "type": "integer",
          "description": "The scan ruleset version.",
          "readOnly": true
        },
        "scanRulesetType": {
          "enum": [
            "Custom",
            "System"
          ],
          "type": "string",
          "description": "The scan ruleset type.",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ScanRulesetType",
            "modelAsString": true
          }
        },
        "scanLevelType": {
          "enum": [
            "Full",
            "Incremental"
          ],
          "type": "string",
          "description": "scan level type",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ScanLevelType",
            "modelAsString": true
          }
        },
        "errorMessage": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "error": {
          "items": [
            {
              "$ref": "#/definitions/ErrorModel"
            }
          ],
          "readOnly": true,
          "description": "The error."
        },
        "runType": {
          "type": "string",
          "readOnly": true,
          "description": "The run type."
        },
        "dataSourceType": {
          "enum": [
            "None",
            "Fabric",
            "AzureSubscription",
            "AzureResourceGroup",
            "AzureSynapseWorkspace",
            "AzureSynapse",
            "AdlsGen1",
            "AdlsGen2",
            "AmazonAccount",
            "AmazonS3",
            "AmazonSql",
            "AzureCosmosDb",
            "AzureDataExplorer",
            "AzureFileService",
            "AzureSqlDatabase",
            "ArcEnabledSqlServer",
            "AmazonPostgreSql",
            "AzurePostgreSql",
            "Databricks",
            "SqlServerDatabase",
            "AzureSqlDatabaseManagedInstance",
            "AzureSqlDataWarehouse",
            "AzureMySql",
            "Hdfs",
            "TableauServer",
            "AzureStorage",
            "Teradata",
            "Oracle",
            "PostgreSql",
            "AmazonRedShift",
            "DatabricksHms",
            "SapS4Hana",
            "SapEcc",
            "Snowflake",
            "PowerBI",
            "Trident",
            "Dataverse",
            "DatabricksUnityCatalog"
          ],
          "type": "string",
          "description": "The properties of datasource, vary by datasource type.",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true
          }
        }
      }
    },
    "ExtendedProperties": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "The subscription identifier."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group."
        }
      }
    },
    "ItemPath": {
      "type": "object",
      "description": "The item path.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path."
        },
        "extendedProperties": {
          "description": "The extended properties.",
          "items": [
            {
              "$ref": "#/definitions/ExtendedProperties"
            }
          ]
        }
      }
    },
    "QualifiedName": {
      "type": "object",
      "description": "The qualified name.",
      "properties": {
        "typeName": {
          "type": "string",
          "description": "The type name."
        },
        "name": {
          "type": "string",
          "description": "The name."
        },
        "extendedProperties": {
          "items": [
            {
              "$ref": "#/definitions/ExtendedProperties"
            }
          ]
        }
      }
    },
    "DataSourceIdentifier": {
      "type": "object",
      "description": "The data source identifier.",
      "properties": {
        "itemPath": {
          "items": [
            {
              "$ref": "#/definitions/ItemPath"
            }
          ]
        },
        "qualifiedName": {
          "items": [
            {
              "$ref": "#/definitions/QualifiedName"
            }
          ]
        },
        "dataSourceName": {
          "type": "string",
          "description": "The data source name."
        },
        "guid": {
          "type": "string",
          "description": "The guid."
        },
        "resourceId": {
          "type": "string",
          "description": "The resource identifier."
        }
      }
    },
    "Scan": {
      "required": [
        "kind"
      ],
      "type": "object",
      "description": "The scan.",
      "items": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "kind": {
          "enum": [
            "AzureSubscriptionCredential",
            "AzureSubscriptionMsi",
            "AzureResourceGroupCredential",
            "AzureResourceGroupMsi",
            "AzureSynapseWorkspaceCredential",
            "AzureSynapseWorkspaceMsi",
            "AzureSynapseCredential",
            "AzureSynapseMsi",
            "AdlsGen1Credential",
            "AdlsGen1Msi",
            "AdlsGen2Credential",
            "AdlsGen2Msi",
            "AmazonAccountCredential",
            "AmazonS3Credential",
            "AmazonS3RoleARN",
            "AmazonSqlCredential",
            "AzureCosmosDbCredential",
            "AzureDataExplorerCredential",
            "AzureDataExplorerMsi",
            "AzureFileServiceCredential",
            "AzureSqlDatabaseCredential",
            "AzureSqlDatabaseMsi",
            "AzureSqlDatabaseNativeAuth",
            "ArcEnabledSqlServerCredential",
            "ArcEnabledSqlServerNativeAuth",
            "AmazonPostgreSqlCredential",
            "AzurePostgreSqlCredential",
            "DatabricksCredential",
            "SqlServerDatabaseCredential",
            "AzureSqlDatabaseManagedInstanceCredential",
            "AzureSqlDatabaseManagedInstanceMsi",
            "AzureSqlDatabaseManagedInstanceNativeAuth",
            "AzureSqlDataWarehouseCredential",
            "AzureSqlDataWarehouseMsi",
            "AzureMySqlCredential",
            "HdfsCredential",
            "AzureStorageCredential",
            "AzureStorageMsi",
            "TeradataTeradataCredential",
            "TeradataTeradataUserPass",
            "TeradataUserPass",
            "OracleOracleCredential",
            "OracleOracleUserPass",
            "DatabricksHmsCredential",
            "SapS4HanaSapS4HanaCredential",
            "SapS4HanaSapS4HanaUserPass",
            "SapEccSapEccCredential",
            "SapEccSapEccUserPass",
            "SnowflakeCredential",
            "PowerBICredential",
            "PowerBIDelegated",
            "PowerBIFpa",
            "PowerBIMsi",
            "FabricCredential",
            "FabricDelegated",
            "FabricFpa",
            "FabricMsi",
            "TridentCredential",
            "TridentDelegated",
            "TridentMsi",
            "DataverseCredential",
            "DataverseMsi"
          ],
          "type": "string",
          "description": "The properties of scan, vary by datasource type.",
          "x-ms-enum": {
            "name": "ScanAuthorizationType",
            "modelAsString": true
          }
        },
        "scanResults": {
          "description": "Scan results of this scan.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanResult"
          },
          "readOnly": true
        },
        "scanResultsWithIngestion": {
          "type": "array",
          "description": "Scan results with ingestion of this scan.",
          "items": {
            "$ref": "#/definitions/ScanResultWithIngestion"
          },
          "readOnly": true
        },
        "scanId": {
          "type": "string",
          "description": "The scan identifier."
        },
        "dataSourceIdentifier": {
          "items": [
            {
              "$ref": "#/definitions/DataSourceIdentifier"
            }
          ]
        },
        "dataSourceName": {
          "type": "string",
          "description": "The data source name."
        },
        "creationType": {
          "enum": [
            "Manual",
            "AutoNative",
            "AutoManaged"
          ],
          "type": "string",
          "description": "The creation type.",
          "x-ms-enum": {
            "name": "CreationType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "DataSource": {
      "required": [
        "kind"
      ],
      "type": "object",
      "description": "The data source.",
      "items": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "kind": {
          "enum": [
            "None",
            "Fabric",
            "AzureSubscription",
            "AzureResourceGroup",
            "AzureSynapseWorkspace",
            "AzureSynapse",
            "AdlsGen1",
            "AdlsGen2",
            "AmazonAccount",
            "AmazonS3",
            "AmazonSql",
            "AzureCosmosDb",
            "AzureDataExplorer",
            "AzureFileService",
            "AzureSqlDatabase",
            "ArcEnabledSqlServer",
            "AmazonPostgreSql",
            "AzurePostgreSql",
            "Databricks",
            "SqlServerDatabase",
            "AzureSqlDatabaseManagedInstance",
            "AzureSqlDataWarehouse",
            "AzureMySql",
            "Hdfs",
            "TableauServer",
            "AzureStorage",
            "Teradata",
            "Oracle",
            "PostgreSql",
            "AmazonRedShift",
            "DatabricksHms",
            "SapS4Hana",
            "SapEcc",
            "Snowflake",
            "PowerBI",
            "Trident",
            "Dataverse",
            "DatabricksUnityCatalog"
          ],
          "type": "string",
          "description": "The properties of datasource, vary by datasource type.",
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true
          }
        },
        "scans": {
          "type": "array",
          "description": "Scans of this data source.",
          "items": {
            "$ref": "#/definitions/Scan"
          },
          "readOnly": true
        },
        "creationType": {
          "enum": [
            "Manual",
            "AutoNative",
            "AutoManaged"
          ],
          "type": "string",
          "description": "The creation type.",
          "x-ms-enum": {
            "name": "CreationType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "DataSourceList": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of data sources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        },
        "count": {
          "description": "The number of data sources.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "FilterProperties": {
      "required": [
        "excludeUriPrefixes",
        "includeUriPrefixes"
      ],
      "type": "object",
      "description": "The filter properties.",
      "properties": {
        "excludeUriPrefixes": {
          "uniqueItems": true,
          "type": "array",
          "description": "The exclude uri prefixes.",
          "items": {
            "type": "string"
          }
        },
        "includeUriPrefixes": {
          "uniqueItems": true,
          "type": "array",
          "description": "The include uri prefixes.",
          "items": {
            "type": "string"
          }
        },
        "excludeRegexes": {
          "uniqueItems": true,
          "type": "array",
          "description": "The exclude regexes.",
          "items": {
            "type": "string"
          }
        },
        "includeRegexes": {
          "uniqueItems": true,
          "type": "array",
          "description": "The include regexes.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Filter": {
      "type": "object",
      "description": "The filter.",
      "items": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/FilterProperties"
            }
          ]
        }
      }
    },
    "IntegrationRuntimeList": {
      "description": "A list of integration runtime resources.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of integration runtimes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntegrationRuntime"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        },
        "count": {
          "description": "The number of integration runtimes.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "IntegrationRuntime": {
      "description": "Purview nested object which serves as a compute resource for activities.",
      "required": [
        "kind"
      ],
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "kind": {
          "description": "Type of integration runtime.",
          "$ref": "#/definitions/IntegrationRuntimeType"
        }
      },
      "discriminator": "kind"
    },
    "IntegrationRuntimeType": {
      "description": "The type of integration runtime.",
      "type": "string",
      "enum": [
        "Managed",
        "SelfHosted"
      ],
      "x-ms-enum": {
        "name": "IntegrationRuntimeType",
        "modelAsString": true
      }
    },
    "ManagedIntegrationRuntimeComputeProperties": {
      "description": "The compute resource properties for managed integration runtime.",
      "type": "object",
      "properties": {
        "location": {
          "description": "The location for managed integration runtime.",
          "type": "string"
        }
      }
    },
    "ManagedIntegrationRuntimeTypeProperties": {
      "description": "Managed integration runtime type properties.",
      "type": "object",
      "properties": {
        "computeProperties": {
          "items": [
            {
              "$ref": "#/definitions/ManagedIntegrationRuntimeComputeProperties"
            }
          ]
        }
      }
    },
    "ManagedVirtualNetworkReference": {
      "description": "The managed virtual network reference.",
      "type": "object",
      "properties": {
        "referenceName": {
          "description": "Reference ManagedVirtualNetwork name.",
          "type": "string"
        },
        "type": {
          "description": "Managed virtual network reference type.",
          "type": "string"
        }
      }
    },
    "ManagedIntegrationRuntimeProperties": {
      "description": "The managed integration runtime properties.",
      "type": "object",
      "properties": {
        "typeProperties": {
          "items": [
            {
              "$ref": "#/definitions/ManagedIntegrationRuntimeTypeProperties"
            }
          ]
        },
        "managedVirtualNetworkReference": {
          "items": [
            {
              "$ref": "#/definitions/ManagedVirtualNetworkReference"
            }
          ]
        },
        "description": {
          "description": "The managed integration runtime description.",
          "type": "string"
        }
      }
    },
    "ManagedIntegrationRuntime": {
      "description": "The managed integration runtime.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/IntegrationRuntime"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/ManagedIntegrationRuntimeProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "Managed"
    },
    "SelfHostedIntegrationRuntimeProperties": {
      "description": "The self-hosted integration runtime properties.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The self-hosted integration runtime description.",
          "type": "string"
        }
      }
    },
    "SelfHostedIntegrationRuntime": {
      "description": "Self-hosted integration runtime.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/IntegrationRuntime"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SelfHostedIntegrationRuntimeProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SelfHosted"
    },
    "SelfHostedIntegrationRuntimeNode": {
      "description": "Properties of Self-hosted integration runtime node.",
      "type": "object",
      "properties": {
        "nodeName": {
          "description": "Name of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "machineName": {
          "description": "Machine name of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "hostServiceUri": {
          "description": "URI for the host machine of the integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "capabilities": {
          "description": "The integration runtime capabilities dictionary.",
          "type": "object",
          "additionalProperties": {
            "description": "The capability details of self-hosted integration runtime node.",
            "type": "string"
          },
          "readOnly": true
        },
        "versionStatus": {
          "description": "Status of the integration runtime node version.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Version of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "registerTime": {
          "description": "The time at which the integration runtime node was registered in ISO8601 format.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "lastConnectTime": {
          "description": "The most recent time at which the integration runtime was connected in ISO8601 format.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "expiryTime": {
          "description": "The time at which the integration runtime will expire in ISO8601 format.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "lastStartTime": {
          "description": "The time the node last started up.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "lastStopTime": {
          "description": "The integration runtime node last stop time.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "lastUpdateResult": {
          "description": "The result of the last integration runtime node update.",
          "type": "string",
          "readOnly": true
        },
        "lastStartUpdateTime": {
          "description": "The last time for the integration runtime node update start.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "lastEndUpdateTime": {
          "description": "The last time for the integration runtime node update end.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "isActiveDispatcher": {
          "description": "Indicates whether this node is the active dispatcher for integration runtime requests.",
          "type": "boolean",
          "readOnly": true
        },
        "concurrentJobsLimit": {
          "description": "The concurrent jobs limit of self-hosted integration runtime node.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "maxConcurrentJobs": {
          "description": "The max concurrent jobs of self-hosted integration runtime node.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SelfHostedIntegrationRuntimeStatusTypeProperties": {
      "description": "Self-hosted integration runtime status type properties.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time at which the integration runtime was created, in ISO8601 format.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "taskQueueId": {
          "description": "The task queue id of the integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "internalChannelEncryption": {
          "description": "It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Version of the integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "nodes": {
          "description": "The list of nodes for this integration runtime.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelfHostedIntegrationRuntimeNode"
          }
        },
        "scheduledUpdateDate": {
          "description": "The date at which the integration runtime will be scheduled to update, in ISO8601 format.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "updateDelayOffset": {
          "description": "The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours.",
          "type": "string",
          "readOnly": true
        },
        "localTimeZoneOffset": {
          "description": "The local time zone offset in hours.",
          "type": "string",
          "readOnly": true
        },
        "capabilities": {
          "description": "Object with additional information about integration runtime capabilities.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "serviceUrls": {
          "description": "The URLs for the services used in integration runtime backend service.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "autoUpdate": {
          "description": "Whether Self-hosted integration runtime auto update has been turned on.",
          "enum": [
            "On",
            "Off"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "IntegrationRuntimeAutoUpdate",
            "modelAsString": true
          }
        },
        "versionStatus": {
          "description": "Status of the integration runtime version.",
          "type": "string",
          "readOnly": true
        },
        "pushedVersion": {
          "description": "The version that the integration runtime is going to update to.",
          "type": "string",
          "readOnly": true
        },
        "latestVersion": {
          "description": "The latest version on download center.",
          "type": "string",
          "readOnly": true
        },
        "autoUpdateETA": {
          "description": "The estimated time when the self-hosted integration runtime will be updated.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SelfHostedIntegrationRuntimeStatusProperties": {
      "description": "Self-hosted integration runtime status properties.",
      "type": "object",
      "properties": {
        "typeProperties": {
          "items": [
            {
              "$ref": "#/definitions/SelfHostedIntegrationRuntimeStatusTypeProperties"
            }
          ]
        },
        "state": {
          "description": "Self-hosted integration runtime state.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SelfHostedIntegrationRuntimeStatus": {
      "description": "Self-hosted integration runtime status.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/IntegrationRuntimeStatus"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SelfHostedIntegrationRuntimeStatusProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SelfHosted"
    },
    "InteractiveQuery": {
      "description": "Interactive query properties of managed integration runtime.",
      "type": "object",
      "properties": {
        "autoTerminationMinutes": {
          "description": "Auto termination minutes of interactive query.",
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "description": "Status of interactive query.",
          "type": "string"
        }
      }
    },
    "ManagedIntegrationRuntimeStatusTypeProperties": {
      "description": "Managed integration runtime status type properties.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time at which the integration runtime was created, in ISO8601 format.",
          "format": "date-time",
          "type": "string"
        },
        "interactiveQuery": {
          "items": [
            {
              "$ref": "#/definitions/InteractiveQuery"
            }
          ]
        }
      }
    },
    "ManagedIntegrationRuntimeStatusProperties": {
      "description": "Managed integration runtime status properties.",
      "type": "object",
      "properties": {
        "typeProperties": {
          "items": [
            {
              "$ref": "#/definitions/ManagedIntegrationRuntimeStatusTypeProperties"
            }
          ]
        },
        "state": {
          "description": "Managed integration runtime state.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ManagedIntegrationRuntimeStatus": {
      "description": "Managed integration runtime status.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/IntegrationRuntimeStatus"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/ManagedIntegrationRuntimeStatusProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "Managed"
    },
    "IntegrationRuntimeStatus": {
      "description": "Integration runtime status.",
      "required": [
        "kind"
      ],
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "kind": {
          "description": "Type of integration runtime.",
          "$ref": "#/definitions/IntegrationRuntimeType"
        }
      },
      "discriminator": "kind"
    },
    "IntegrationRuntimeAuthKeys": {
      "description": "The integration runtime authentication keys.",
      "type": "object",
      "properties": {
        "authKey1": {
          "type": "string",
          "description": "The primary integration runtime authentication key."
        },
        "authKey2": {
          "type": "string",
          "description": "The secondary integration runtime authentication key."
        }
      }
    },
    "IntegrationRuntimeRegenerateKeyParameters": {
      "description": "Parameters to regenerate the authentication key.",
      "type": "object",
      "properties": {
        "keyName": {
          "description": "The name of the authentication key to regenerate.",
          "type": "string",
          "enum": [
            "authKey1",
            "authKey2"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeAuthKeyName",
            "modelAsString": true
          }
        }
      }
    },
    "EnableInteractiveQueryForIntegrationRuntimeRequest": {
      "description": "The request of enabling interactive query for integration runtime.",
      "type": "object",
      "properties": {
        "autoTerminationMinutes": {
          "description": "The interactive querying auto termination time in minutes.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ManagedVirtualNetworkList": {
      "description": "A list of managed virtual network resources.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of managed virtual networks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedVirtualNetwork"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        },
        "count": {
          "description": "The number of managed virtual networks.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ManagedVirtualNetwork": {
      "description": "The managed virtual network.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/ManagedVirtualNetworkProperties"
            }
          ]
        }
      }
    },
    "ManagedVirtualNetworkProperties": {
      "description": "The properties of managed virtual network.",
      "type": "object",
      "properties": {
        "vNetId": {
          "description": "The ID of the VNet that this integration runtime will join.",
          "type": "string",
          "readOnly": true
        },
        "alias": {
          "description": "The alias of managed virtual network.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ManagedPrivateEndpointList": {
      "description": "A list of managed private endpoint resources.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of managed private endpoints.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedPrivateEndpoint"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        },
        "count": {
          "description": "The number of managed private endpoints.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ManagedPrivateEndpoint": {
      "description": "The managed private endpoint.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/ManagedPrivateEndpointProperties"
            }
          ]
        }
      }
    },
    "ManagedPrivateEndpointProperties": {
      "description": "The properties of managed private endpoint.",
      "type": "object",
      "properties": {
        "connectionState": {
          "items": [
            {
              "$ref": "#/definitions/ConnectionStateProperties"
            }
          ]
        },
        "fqdns": {
          "description": "The fqdns of managed private endpoint.",
          "type": "array",
          "items": {
            "description": "The fqdn items of managed private endpoint.",
            "type": "string"
          }
        },
        "groupId": {
          "description": "The group identifier of managed private endpoint.",
          "type": "string"
        },
        "privateLinkResourceId": {
          "description": "The private link resource identifier of managed private endpoint.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning state of managed private endpoint.",
          "type": "string"
        }
      }
    },
    "ConnectionStateProperties": {
      "description": "The properties of connection state.",
      "type": "object",
      "properties": {
        "actionsRequired": {
          "description": "ActionsRequired for a private link connection.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Description of a private link connection.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of a private link connection.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ScanList": {
      "description": "The list of scan.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of scans.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Scan"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        },
        "count": {
          "description": "The number of scans.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ScanHistoryList": {
      "description": "The list of scan history.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of scan history.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanResultWithIngestion"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        },
        "count": {
          "description": "The number of scan history.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ScanHistoryListWithIngestion": {
      "description": "The list of scan history with ingestion.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of scan history with ingestion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanResultWithIngestion"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        },
        "count": {
          "description": "The number of scan history with ingestion.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "VersionedScanRuleset": {
      "description": "The versioned scan ruleset.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "scanRulesetType": {
          "enum": [
            "Custom",
            "System"
          ],
          "type": "string",
          "description": "versioned scan ruleset properties",
          "x-ms-enum": {
            "name": "ScanRulesetType",
            "modelAsString": true
          }
        },
        "status": {
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "description": "status of versioned scan ruleset properties",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ScanRulesetStatus",
            "modelAsString": true
          }
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "version of versioned scan ruleset properties",
          "readOnly": true
        }
      }
    },
    "ScanRuleset": {
      "description": "The scan ruleset.",
      "required": [
        "kind"
      ],
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/VersionedScanRuleset"
        }
      ],
      "properties": {
        "kind": {
          "enum": [
            "None",
            "Fabric",
            "AzureSubscription",
            "AzureResourceGroup",
            "AzureSynapseWorkspace",
            "AzureSynapse",
            "AdlsGen1",
            "AdlsGen2",
            "AmazonAccount",
            "AmazonS3",
            "AmazonSql",
            "AzureCosmosDb",
            "AzureDataExplorer",
            "AzureFileService",
            "AzureSqlDatabase",
            "ArcEnabledSqlServer",
            "AmazonPostgreSql",
            "AzurePostgreSql",
            "Databricks",
            "SqlServerDatabase",
            "AzureSqlDatabaseManagedInstance",
            "AzureSqlDataWarehouse",
            "AzureMySql",
            "Hdfs",
            "TableauServer",
            "AzureStorage",
            "Teradata",
            "Oracle",
            "PostgreSql",
            "AmazonRedShift",
            "DatabricksHms",
            "SapS4Hana",
            "SapEcc",
            "Snowflake",
            "PowerBI",
            "Trident",
            "Dataverse",
            "DatabricksUnityCatalog"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "ScanRulesetList": {
      "required": [
        "value"
      ],
      "type": "object",
      "description": "The list of scan rulesets.",
      "properties": {
        "value": {
          "description": "List of scan rulesets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanRuleset"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        },
        "count": {
          "description": "The number of scan rulesets.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "SystemScanRuleset": {
      "required": [
        "kind"
      ],
      "type": "object",
      "description": "The system scan ruleset.",
      "items": [
        {
          "$ref": "#/definitions/VersionedScanRuleset"
        }
      ],
      "properties": {
        "kind": {
          "enum": [
            "None",
            "Fabric",
            "AzureSubscription",
            "AzureResourceGroup",
            "AzureSynapseWorkspace",
            "AzureSynapse",
            "AdlsGen1",
            "AdlsGen2",
            "AmazonAccount",
            "AmazonS3",
            "AmazonSql",
            "AzureCosmosDb",
            "AzureDataExplorer",
            "AzureFileService",
            "AzureSqlDatabase",
            "ArcEnabledSqlServer",
            "AmazonPostgreSql",
            "AzurePostgreSql",
            "Databricks",
            "SqlServerDatabase",
            "AzureSqlDatabaseManagedInstance",
            "AzureSqlDataWarehouse",
            "AzureMySql",
            "Hdfs",
            "TableauServer",
            "AzureStorage",
            "Teradata",
            "Oracle",
            "PostgreSql",
            "AmazonRedShift",
            "DatabricksHms",
            "SapS4Hana",
            "SapEcc",
            "Snowflake",
            "PowerBI",
            "Trident",
            "Dataverse",
            "DatabricksUnityCatalog"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "SystemScanRulesetList": {
      "required": [
        "value"
      ],
      "type": "object",
      "description": "The list of system scan rulesets.",
      "properties": {
        "value": {
          "description": "List of system scan rulesets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SystemScanRuleset"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        },
        "count": {
          "description": "The number of system scan rulesets.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "RecurrenceScheduleOccurrence": {
      "type": "object",
      "description": "The occurrence of recurrence schedule.",
      "properties": {
        "additionalProperties": {
          "type": "object"
        },
        "day": {
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "type": "string",
          "description": "The day of recurrence schedule occurrence.",
          "x-ms-enum": {
            "name": "DayOfWeek",
            "modelAsString": true
          }
        },
        "occurrence": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "RecurrenceSchedule": {
      "description": "Schedule of recurrence.",
      "type": "object",
      "properties": {
        "additionalProperties": {
          "type": "object"
        },
        "minutes": {
          "type": "array",
          "description": "The minutes of recurrence schedule.",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "hours": {
          "type": "array",
          "description": "The hours of recurrence schedule.",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "weekDays": {
          "type": "array",
          "description": "The week days of recurrence schedule.",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DaysOfWeek",
              "modelAsString": true
            }
          }
        },
        "monthDays": {
          "type": "array",
          "description": "month days of recurrence schedule.",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "monthlyOccurrences": {
          "type": "array",
          "description": "The monthly occurrences of recurrence schedule.",
          "items": {
            "$ref": "#/definitions/RecurrenceScheduleOccurrence"
          }
        }
      }
    },
    "TriggerRecurrence": {
      "description": "The recurrence of trigger.",
      "type": "object",
      "properties": {
        "frequency": {
          "enum": [
            "Week",
            "Month",
            "Day",
            "Hour"
          ],
          "type": "string",
          "description": "The frequency of trigger recurrence.",
          "x-ms-enum": {
            "name": "TriggerFrequency",
            "modelAsString": true
          }
        },
        "interval": {
          "format": "int32",
          "type": "integer",
          "description": "The interval of trigger recurrence."
        },
        "startTime": {
          "format": "date-time",
          "type": "string",
          "description": "The start time of trigger recurrence."
        },
        "endTime": {
          "format": "date-time",
          "type": "string",
          "description": "The end time of trigger recurrence."
        },
        "schedule": {
          "items": [
            {
              "$ref": "#/definitions/RecurrenceSchedule"
            }
          ],
          "description": "The schedule of trigger recurrence."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone of trigger recurrence."
        }
      }
    },
    "TriggerProperties": {
      "description": "Properties detail of trigger.",
      "type": "object",
      "properties": {
        "recurrence": {
          "items": [
            {
              "$ref": "#/definitions/TriggerRecurrence"
            }
          ],
          "description": "The recurrence of trigger."
        },
        "recurrenceInterval": {
          "type": "string",
          "description": "The recurrence interval of trigger."
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "description": "The create time of trigger.",
          "readOnly": true
        },
        "lastModifiedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The last modified time of trigger.",
          "readOnly": true
        },
        "lastScheduled": {
          "format": "date-time",
          "type": "string",
          "description": "The last scheduled time of trigger.",
          "readOnly": true
        },
        "state": {
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "description": "The state of trigger.",
          "x-ms-enum": {
            "name": "TriggerState",
            "modelAsString": true
          }
        },
        "scanLevel": {
          "enum": [
            "Full",
            "Incremental"
          ],
          "type": "string",
          "description": "The scan level of trigger.",
          "x-ms-enum": {
            "name": "ScanLevelType",
            "modelAsString": true
          }
        },
        "incrementalScanStartTime": {
          "format": "date-time",
          "type": "string",
          "description": "The incremental scan start time of trigger."
        }
      }
    },
    "Trigger": {
      "description": "The trigger object.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/TriggerProperties"
            }
          ],
          "description": "The properties of trigger."
        },
        "validationErrorInfo": {
          "type": "string",
          "description": "The validation error info of trigger."
        }
      }
    },
    "CollectionReference": {
      "description": "The reference to collection.",
      "type": "object",
      "properties": {
        "lastModifiedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The last modified time of collection reference.",
          "readOnly": true
        },
        "referenceName": {
          "type": "string",
          "description": "The reference name of collection reference."
        },
        "type": {
          "type": "string",
          "description": "The type of collection reference."
        }
      }
    },
    "SystemClassificationRuleProperties": {
      "description": "The properties of system classification rule.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "The version of system classification rule.",
          "readOnly": true
        },
        "classificationName": {
          "type": "string",
          "description": "The classification name of system classification rule."
        },
        "ruleStatus": {
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "description": "The rule status of system classification rule.",
          "x-ms-enum": {
            "name": "ClassificationRuleStatus",
            "modelAsString": true
          }
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "description": "The create time of system classification rule.",
          "readOnly": true
        },
        "lastModifiedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The last modified time of system classification rule.",
          "readOnly": true
        }
      }
    },
    "SystemClassificationRule": {
      "description": "The rule of system classification.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/ClassificationRule"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SystemClassificationRuleProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "System"
    },
    "ClassificationRulePattern": {
      "description": "Pattern of classification rule.",
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "enum": [
            "Regex"
          ],
          "type": "string",
          "description": "The properties of classification rule pattern.",
          "x-ms-enum": {
            "name": "ClassificationRulePatternType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "CustomClassificationRuleProperties": {
      "description": "The properties of custom classification rule.",
      "type": "object",
      "properties": {
        "minimumPercentageMatch": {
          "format": "double",
          "type": "number"
        },
        "classificationAction": {
          "description": "The action of classification rule.",
          "enum": [
            "Keep",
            "Delete"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ClassificationAction",
            "modelAsString": true
          }
        },
        "dataPatterns": {
          "type": "array",
          "description": "The data patterns of custom classification rule.",
          "items": {
            "$ref": "#/definitions/ClassificationRulePattern"
          }
        },
        "columnPatterns": {
          "type": "array",
          "description": "The column patterns of custom classification rule.",
          "items": {
            "$ref": "#/definitions/ClassificationRulePattern"
          }
        },
        "description": {
          "type": "string"
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "The version of custom classification rule.",
          "readOnly": true
        },
        "classificationName": {
          "type": "string",
          "description": "The classification name of custom classification rule."
        },
        "ruleStatus": {
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "description": "The rule status of custom classification rule.",
          "x-ms-enum": {
            "name": "ClassificationRuleStatus",
            "modelAsString": true
          }
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "description": "The create time of custom classification rule.",
          "readOnly": true
        },
        "lastModifiedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The last modified time of custom classification rule.",
          "readOnly": true
        }
      }
    },
    "CustomClassificationRule": {
      "description": "Rule of custom classification.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/ClassificationRule"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/CustomClassificationRuleProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "Custom"
    },
    "RegexClassificationRulePattern": {
      "description": "Pattern of regex classification rule.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/ClassificationRulePattern"
        }
      ],
      "properties": {
        "pattern": {
          "type": "string",
          "description": "The pattern of regex classification rule pattern."
        }
      },
      "x-ms-discriminator-value": "Regex"
    },
    "Store": {
      "type": "object",
      "properties": {
        "referenceName": {
          "type": "string",
          "description": "The reference name of store."
        },
        "type": {
          "type": "string",
          "description": "The type of store."
        }
      }
    },
    "KeyVaultSecret": {
      "description": "The key vault secret.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of key vault secret."
        },
        "secretName": {
          "type": "string",
          "description": "The secret name of key vault secret."
        },
        "secretVersion": {
          "type": "string",
          "description": "The secret version of key vault secret."
        },
        "store": {
          "items": [
            {
              "$ref": "#/definitions/Store"
            }
          ]
        }
      }
    },
    "KeyVaultSecretAccountKeyCredentialTypeProperties": {
      "description": "Properties of key vault secret account key credential type.",
      "type": "object",
      "properties": {
        "accountKey": {
          "items": [
            {
              "$ref": "#/definitions/KeyVaultSecret"
            }
          ],
          "description": "The account key of key vault secret account key credential type."
        }
      }
    },
    "AccountKeyCredentialProperties": {
      "description": "Properties of account key credential.",
      "type": "object",
      "properties": {
        "typeProperties": {
          "items": [
            {
              "$ref": "#/definitions/KeyVaultSecretAccountKeyCredentialTypeProperties"
            }
          ],
          "description": "The type properties of account key credential."
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AccountKeyAuthAzureKeyVaultCredential": {
      "type": "object",
      "description": "Credential type that uses Account Key for authentication.",
      "items": [
        {
          "$ref": "#/definitions/Credential"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AccountKeyCredentialProperties"
            }
          ],
          "description": "The properties of account key auth azure key vault credential."
        }
      },
      "x-ms-discriminator-value": "AccountKey"
    },
    "KeyVaultSecretUserPassCredentialTypeProperties": {
      "description": "Properties of key vault secret user pass credential type.",
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "password": {
          "items": [
            {
              "$ref": "#/definitions/KeyVaultSecret"
            }
          ],
          "description": "The password of key vault secret user pass credential type."
        }
      }
    },
    "UserPassCredentialProperties": {
      "description": "Properties of user pass credential.",
      "type": "object",
      "properties": {
        "typeProperties": {
          "items": [
            {
              "$ref": "#/definitions/KeyVaultSecretUserPassCredentialTypeProperties"
            }
          ]
        },
        "description": {
          "type": "string"
        }
      }
    },
    "BasicAuthAzureKeyVaultCredential": {
      "type": "object",
      "description": "Credential type that uses Basic authentication.",
      "items": [
        {
          "$ref": "#/definitions/Credential"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/UserPassCredentialProperties"
            }
          ],
          "description": "The properties of basic auth azure key vault credential."
        }
      },
      "x-ms-discriminator-value": "BasicAuth"
    },
    "RoleARNCredentialTypeProperties": {
      "type": "object",
      "properties": {
        "roleARN": {
          "type": "string",
          "description": "The role ARN of role ARN credential type properties."
        }
      }
    },
    "RoleARNCredentialProperties": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "items": [
            {
              "$ref": "#/definitions/RoleARNCredentialTypeProperties"
            }
          ]
        },
        "description": {
          "type": "string"
        }
      }
    },
    "RoleARNCredential": {
      "type": "object",
      "description": "Credential type that uses Account ID, External ID and Role ARN for authentication.",
      "items": [
        {
          "$ref": "#/definitions/Credential"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/RoleARNCredentialProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonARN"
    },
    "KeyVaultSecretServicePrinipalCredentialTypeProperties": {
      "type": "object",
      "properties": {
        "servicePrincipalId": {
          "type": "string",
          "description": "The service principal ID of key vault secret service principal credential type properties."
        },
        "servicePrincipalKey": {
          "items": [
            {
              "$ref": "#/definitions/KeyVaultSecret"
            }
          ]
        },
        "tenant": {
          "type": "string"
        }
      }
    },
    "ServicePrincipalAzureKeyVaultCredentialProperties": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "items": [
            {
              "$ref": "#/definitions/KeyVaultSecretServicePrinipalCredentialTypeProperties"
            }
          ]
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ServicePrincipalAzureKeyVaultCredential": {
      "type": "object",
      "description": "Credential type that uses Tenant ID and Service principal ID for authentication.",
      "items": [
        {
          "$ref": "#/definitions/Credential"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/ServicePrincipalAzureKeyVaultCredentialProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "ServicePrincipal"
    },
    "SqlAuthAzureKeyVaultCredential": {
      "type": "object",
      "description": "Credential type that uses Sql for authentication.",
      "items": [
        {
          "$ref": "#/definitions/Credential"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/UserPassCredentialProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SqlAuth"
    },
    "KeyVaultSecretConsumerKeyCredentialTypeProperties": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "password": {
          "items": [
            {
              "$ref": "#/definitions/KeyVaultSecret"
            }
          ],
          "description": "The password of key vault secret consumer key credential type properties."
        },
        "consumerKey": {
          "type": "string",
          "description": "The consumer key of key vault secret consumer key credential type properties."
        },
        "consumerSecret": {
          "items": [
            {
              "$ref": "#/definitions/KeyVaultSecret"
            }
          ],
          "description": "The consumer secret of key vault secret consumer key credential type properties."
        }
      }
    },
    "ConsumerKeyCredentialProperties": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "items": [
            {
              "$ref": "#/definitions/KeyVaultSecretConsumerKeyCredentialTypeProperties"
            }
          ]
        },
        "description": {
          "type": "string",
          "description": "description of credential properties."
        }
      }
    },
    "ConsumerKeyAuthAzureKeyVaultCredential": {
      "type": "object",
      "description": "Credential type that uses consumer provided key and secret for authentication.",
      "items": [
        {
          "$ref": "#/definitions/Credential"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/ConsumerKeyCredentialProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "ConsumerKeyAuth"
    },
    "KeyVaultSecretDelegatedAuthCredentialTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "items": [
            {
              "$ref": "#/definitions/KeyVaultSecret"
            }
          ],
          "description": "key vault secret"
        }
      }
    },
    "DelegatedAuthCredentialProperties": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "items": [
            {
              "$ref": "#/definitions/KeyVaultSecretDelegatedAuthCredentialTypeProperties"
            }
          ],
          "description": "The type properties of delegated auth credential."
        },
        "description": {
          "type": "string"
        }
      }
    },
    "DelegatedAuthAzureKeyVaultCredential": {
      "type": "object",
      "description": "Credential type that uses Client ID for authentication.",
      "items": [
        {
          "$ref": "#/definitions/Credential"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/DelegatedAuthCredentialProperties"
            }
          ],
          "description": "The properties of delegated auth azure key vault credential."
        }
      },
      "x-ms-discriminator-value": "DelegatedAuth"
    },
    "KeyVaultSecretManagedIdentityAzureKeyVaultCredentialTypeProperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of key vault secret managed identity azure key vault credential type properties."
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of key vault secret managed identity azure key vault credential type properties."
        },
        "resourceId": {
          "type": "string",
          "description": "The resource ID of key vault secret managed identity azure key vault credential type properties."
        }
      }
    },
    "ManagedIdentityAzureKeyVaultCredentialProperties": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "items": [
            {
              "$ref": "#/definitions/KeyVaultSecretManagedIdentityAzureKeyVaultCredentialTypeProperties"
            }
          ],
          "description": "The type properties of managed identity azure key vault credential."
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ManagedIdentityAzureKeyVaultCredential": {
      "type": "object",
      "description": "Credential type that uses User assigned managed identities for authentication.",
      "items": [
        {
          "$ref": "#/definitions/Credential"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/ManagedIdentityAzureKeyVaultCredentialProperties"
            }
          ],
          "description": "The properties of managed identity azure key vault credential."
        }
      },
      "x-ms-discriminator-value": "ManagedIdentity"
    },
    "DataSourceProperties": {
      "description": "Properties of data source.",
      "type": "object",
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "description": "The create time of data source.",
          "readOnly": true
        },
        "lastModifiedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The last modified time of data source.",
          "readOnly": true
        },
        "collection": {
          "items": [
            {
              "$ref": "#/definitions/CollectionReference"
            }
          ]
        },
        "dataSourceCollectionMovingState": {
          "enum": [
            "Active",
            "Moving",
            "Failed"
          ],
          "type": "string",
          "description": "data source collection moving state",
          "x-ms-enum": {
            "name": "DataSourceCollectionState",
            "modelAsString": true
          }
        }
      }
    },
    "AzureSubscriptionProperties": {
      "description": "Properties of azure subscription.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/DataSourceProperties"
        }
      ],
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of azure subscription."
        },
        "resourceId": {
          "type": "string",
          "description": "The resource ID of azure subscription."
        },
        "dataUseGovernance": {
          "enum": [
            "Disabled",
            "DisabledByAnotherAccount",
            "Enabled",
            "EnabledAtAncestorScope"
          ],
          "type": "string",
          "description": "The data use governance of azure subscription.",
          "x-ms-enum": {
            "name": "DataUseGovernanceState",
            "modelAsString": true
          }
        }
      }
    },
    "AzureSubscriptionDataSource": {
      "description": "Azure subscription data source.",
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSubscriptionProperties"
            }
          ],
          "description": "azure subscription properties"
        }
      },
      "x-ms-discriminator-value": "AzureSubscription"
    },
    "AzureResourceGroupProperties": {
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/DataSourceProperties"
        }
      ],
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "subscription id"
        },
        "resourceGroup": {
          "type": "string",
          "description": "resource group"
        },
        "resourceId": {
          "type": "string",
          "description": "resource id"
        },
        "dataUseGovernance": {
          "enum": [
            "Disabled",
            "DisabledByAnotherAccount",
            "Enabled",
            "EnabledAtAncestorScope"
          ],
          "type": "string",
          "description": "data use governance",
          "x-ms-enum": {
            "name": "DataUseGovernanceState",
            "modelAsString": true
          }
        }
      }
    },
    "AzureResourceGroupDataSource": {
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureResourceGroupProperties"
            }
          ],
          "description": "azure resource group properties"
        }
      },
      "x-ms-discriminator-value": "AzureResourceGroup"
    },
    "AzureDataSourceProperties": {
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/DataSourceProperties"
        }
      ],
      "properties": {
        "resourceGroup": {
          "type": "string",
          "description": "resource group"
        },
        "subscriptionId": {
          "type": "string",
          "description": "subscription id"
        },
        "location": {
          "type": "string",
          "description": "location"
        },
        "resourceName": {
          "type": "string",
          "description": "resource name"
        },
        "resourceId": {
          "type": "string",
          "description": "resource id"
        },
        "dataUseGovernance": {
          "enum": [
            "Disabled",
            "DisabledByAnotherAccount",
            "Enabled",
            "EnabledAtAncestorScope"
          ],
          "type": "string",
          "description": "data use governance",
          "x-ms-enum": {
            "name": "DataUseGovernanceState",
            "modelAsString": true
          }
        }
      }
    },
    "AzureSynapseWorkspaceProperties": {
      "type": "object",
      "description": "Azure synapse workspace data source properties.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "dedicatedSqlEndpoint": {
          "type": "string",
          "description": "The dedicated SQL endpoint of azure synapse workspace."
        },
        "serverlessSqlEndpoint": {
          "type": "string",
          "description": "The serverless SQL endpoint of azure synapse workspace."
        }
      }
    },
    "AzureSynapseWorkspaceDataSource": {
      "type": "object",
      "description": "Azure synapse workspace data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSynapseWorkspaceProperties"
            }
          ],
          "description": "azure synapse workspace properties"
        }
      },
      "x-ms-discriminator-value": "AzureSynapseWorkspace"
    },
    "AzureSynapseProperties": {
      "type": "object",
      "description": "Azure synapse data source properties.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "sqlEndpoint": {
          "type": "string",
          "description": "The SQL endpoint of azure synapse."
        },
        "sqlOnDemandEndpoint": {
          "type": "string",
          "description": "The SQL on demand endpoint of azure synapse."
        }
      }
    },
    "AzureSynapseDataSource": {
      "type": "object",
      "description": "Azure synapse data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSynapseProperties"
            }
          ],
          "description": "azure synapse properties"
        }
      },
      "x-ms-discriminator-value": "AzureSynapse"
    },
    "AdlsGen1Properties": {
      "type": "object",
      "description": "The properties of adls gen1.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "The endpoint of adls gen1."
        }
      }
    },
    "AdlsGen1DataSource": {
      "type": "object",
      "description": "The adls gen1 data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AdlsGen1Properties"
            }
          ],
          "description": "The properties of adls gen1."
        }
      },
      "x-ms-discriminator-value": "AdlsGen1"
    },
    "AdlsGen2Properties": {
      "type": "object",
      "description": "The properties of adls gen2.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "endpoint": {
          "type": "string"
        }
      }
    },
    "AdlsGen2DataSource": {
      "type": "object",
      "description": "The adls gen2 data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AdlsGen2Properties"
            }
          ],
          "description": "The properties of adls gen2."
        }
      },
      "x-ms-discriminator-value": "AdlsGen2"
    },
    "AmazonAccountProperties": {
      "type": "object",
      "description": "The properties of amazon account.",
      "items": [
        {
          "$ref": "#/definitions/DataSourceProperties"
        }
      ],
      "properties": {
        "awsAccountId": {
          "type": "string",
          "description": "aws account id"
        },
        "roleARN": {
          "type": "string",
          "description": "role arn"
        }
      }
    },
    "AmazonAccountDataSource": {
      "type": "object",
      "description": "The amazon account data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonAccountProperties"
            }
          ],
          "description": "The properties of amazon account."
        }
      },
      "x-ms-discriminator-value": "AmazonAccount"
    },
    "AmazonS3Properties": {
      "type": "object",
      "description": "The properties of amazon s3.",
      "items": [
        {
          "$ref": "#/definitions/DataSourceProperties"
        }
      ],
      "properties": {
        "serviceUrl": {
          "type": "string",
          "description": "service URL"
        },
        "roleARN": {
          "type": "string",
          "description": "role ARN"
        }
      }
    },
    "AmazonS3DataSource": {
      "type": "object",
      "description": "The amazon s3 data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonS3Properties"
            }
          ],
          "description": "Amazon s3 properties"
        }
      },
      "x-ms-discriminator-value": "AmazonS3"
    },
    "AmazonSqlProperties": {
      "type": "object",
      "description": "The properties of amazon sql.",
      "items": [
        {
          "$ref": "#/definitions/DataSourceProperties"
        }
      ],
      "properties": {
        "serverEndpoint": {
          "type": "string",
          "description": "server Endpoint"
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "port"
        },
        "vpcEndpointServiceName": {
          "type": "string",
          "description": "vpc Endpoint Service Name"
        }
      }
    },
    "AmazonSqlDataSource": {
      "type": "object",
      "description": "The amazon sql data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonSqlProperties"
            }
          ],
          "description": "Amazon sql properties"
        }
      },
      "x-ms-discriminator-value": "AmazonSql"
    },
    "AzureCosmosDbProperties": {
      "type": "object",
      "description": "The properties of azure cosmos db.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "accountUri": {
          "type": "string",
          "description": "The account URI of azure cosmos db."
        }
      }
    },
    "AzureCosmosDbDataSource": {
      "type": "object",
      "description": "The azure cosmos db data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureCosmosDbProperties"
            }
          ],
          "description": "The properties of azure cosmos db."
        }
      },
      "x-ms-discriminator-value": "AzureCosmosDb"
    },
    "AzureDataExplorerProperties": {
      "type": "object",
      "description": "The properties of azure data explorer.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "endpoint": {
          "type": "string"
        }
      }
    },
    "AzureDataExplorerDataSource": {
      "type": "object",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureDataExplorerProperties"
            }
          ],
          "description": "The properties of azure data explorer."
        }
      },
      "x-ms-discriminator-value": "AzureDataExplorer"
    },
    "AzureFileServiceProperties": {
      "type": "object",
      "description": "The properties of azure file service.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "The endpoint of azure file service."
        }
      }
    },
    "AzureFileServiceDataSource": {
      "type": "object",
      "description": "The azure file service data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureFileServiceProperties"
            }
          ],
          "description": "The properties of azure file service."
        }
      },
      "x-ms-discriminator-value": "AzureFileService"
    },
    "AzureSqlDatabaseProperties": {
      "type": "object",
      "description": "The properties of azure sql database.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "serverEndpoint": {
          "type": "string",
          "description": "The server endpoint of azure sql database."
        }
      }
    },
    "AzureSqlDatabaseDataSource": {
      "type": "object",
      "description": "The azure sql database data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDatabaseProperties"
            }
          ],
          "description": "The properties of azure sql database."
        }
      },
      "x-ms-discriminator-value": "AzureSqlDatabase"
    },
    "AmazonPostgreSqlProperties": {
      "type": "object",
      "description": "The properties of amazon postgre sql.",
      "items": [
        {
          "$ref": "#/definitions/DataSourceProperties"
        }
      ],
      "properties": {
        "serverEndpoint": {
          "type": "string",
          "description": "The server endpoint of amazon postgre sql."
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "The port of amazon postgre sql."
        },
        "vpcEndpointServiceName": {
          "type": "string",
          "description": "The vpc endpoint service name of amazon postgre sql."
        }
      }
    },
    "AmazonPostgreSqlDataSource": {
      "type": "object",
      "description": "The amazon postgre sql data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonPostgreSqlProperties"
            }
          ],
          "description": "The properties of amazon postgre sql."
        }
      },
      "x-ms-discriminator-value": "AmazonPostgreSql"
    },
    "AzurePostgreSqlProperties": {
      "type": "object",
      "description": "The properties of azure postgre sql.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "serverEndpoint": {
          "type": "string",
          "description": "The server endpoint of azure postgre sql."
        },
        "port": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AzurePostgreSqlDataSource": {
      "type": "object",
      "description": "The azure postgre sql data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzurePostgreSqlProperties"
            }
          ],
          "description": "The properties of azure postgre sql."
        }
      },
      "x-ms-discriminator-value": "AzurePostgreSql"
    },
    "SqlServerDatabaseProperties": {
      "type": "object",
      "description": "The properties of sql server database.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "serverEndpoint": {
          "type": "string",
          "description": "The server endpoint of sql server database."
        }
      }
    },
    "SqlServerDatabaseDataSource": {
      "type": "object",
      "description": "The sql server database data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SqlServerDatabaseProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SqlServerDatabase"
    },
    "AzureSqlDatabaseManagedInstanceProperties": {
      "type": "object",
      "description": "The properties of azure sql database managed instance.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "serverEndpoint": {
          "type": "string"
        }
      }
    },
    "AzureSqlDatabaseManagedInstanceDataSource": {
      "type": "object",
      "description": "The azure sql database managed instance data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDatabaseManagedInstanceProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDatabaseManagedInstance"
    },
    "AzureSqlDataWarehouseProperties": {
      "type": "object",
      "description": "The properties of azure sql data warehouse.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "serverEndpoint": {
          "type": "string"
        }
      }
    },
    "AzureSqlDataWarehouseDataSource": {
      "type": "object",
      "description": "The azure sql data warehouse data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDataWarehouseProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDataWarehouse"
    },
    "AzureMySqlProperties": {
      "type": "object",
      "description": "Azure MySql data source properties.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "serverEndpoint": {
          "type": "string",
          "description": "The server endpoint of azure my sql."
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "The port of azure my sql."
        }
      }
    },
    "AzureMySqlDataSource": {
      "type": "object",
      "description": "Azure MySql data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureMySqlProperties"
            }
          ],
          "description": "Azure MySql properties"
        }
      },
      "x-ms-discriminator-value": "AzureMySql"
    },
    "AzureStorageProperties": {
      "type": "object",
      "description": "The properties of azure storage.",
      "items": [
        {
          "$ref": "#/definitions/AzureDataSourceProperties"
        }
      ],
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "The endpoint of azure storage."
        }
      }
    },
    "AzureStorageDataSource": {
      "type": "object",
      "description": "The azure storage data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureStorageProperties"
            }
          ],
          "description": "The properties of azure storage."
        }
      },
      "x-ms-discriminator-value": "AzureStorage"
    },
    "TeradataProperties": {
      "type": "object",
      "description": "The properties of teradata.",
      "items": [
        {
          "$ref": "#/definitions/DataSourceProperties"
        }
      ],
      "properties": {
        "host": {
          "type": "string",
          "description": "The host of teradata."
        }
      }
    },
    "TeradataDataSource": {
      "type": "object",
      "description": "The teradata data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/TeradataProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "Teradata"
    },
    "OracleProperties": {
      "type": "object",
      "description": "The properties of oracle.",
      "items": [
        {
          "$ref": "#/definitions/DataSourceProperties"
        }
      ],
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "service": {
          "type": "string"
        }
      }
    },
    "OracleDataSource": {
      "type": "object",
      "description": "The oracle data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/OracleProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "Oracle"
    },
    "SapS4HanaProperties": {
      "type": "object",
      "description": "Sap S4 Hana data source properties.",
      "items": [
        {
          "$ref": "#/definitions/DataSourceProperties"
        }
      ],
      "properties": {
        "applicationServer": {
          "type": "string",
          "description": "The application server of sap s4 hana."
        },
        "systemNumber": {
          "type": "string",
          "description": "The system number of sap s4 hana."
        }
      }
    },
    "SapS4HanaDataSource": {
      "type": "object",
      "description": "Sap S4 Hana data source.",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SapS4HanaProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SapS4Hana"
    },
    "SapEccProperties": {
      "type": "object",
      "description": "Sap Ecc properties",
      "items": [
        {
          "$ref": "#/definitions/DataSourceProperties"
        }
      ],
      "properties": {
        "applicationServer": {
          "type": "string"
        },
        "systemNumber": {
          "type": "string"
        }
      }
    },
    "SapEccDataSource": {
      "type": "object",
      "description": "Sap Ecc data source",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SapEccProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SapEcc"
    },
    "PowerBIProperties": {
      "type": "object",
      "description": "power bi properties",
      "items": [
        {
          "$ref": "#/definitions/DataSourceProperties"
        }
      ],
      "properties": {
        "tenant": {
          "type": "string"
        }
      }
    },
    "PowerBIDataSource": {
      "type": "object",
      "description": "power bi data source",
      "items": [
        {
          "$ref": "#/definitions/DataSource"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/PowerBIProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "PowerBI"
    },
    "ScanRulesetProperties": {
      "type": "object",
      "description": "scan ruleset properties",
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "description": "The time at which the scan ruleset was created.",
          "readOnly": true
        },
        "description": {
          "type": "string"
        },
        "excludedSystemClassifications": {
          "uniqueItems": true,
          "type": "array",
          "description": "The system classifications that are excluded from the scan ruleset.",
          "items": {
            "type": "string"
          }
        },
        "includedCustomClassificationRuleNames": {
          "uniqueItems": true,
          "type": "array",
          "description": "The custom classification rule names that are included in the scan ruleset.",
          "items": {
            "type": "string"
          }
        },
        "lastModifiedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The time at which the scan ruleset was last modified.",
          "readOnly": true
        }
      }
    },
    "AzureSubscriptionScanRulesetProperties": {
      "type": "object",
      "description": "azure subscription scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AzureSubscriptionScanRuleset": {
      "type": "object",
      "description": "azure subscription scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSubscriptionScanRulesetProperties"
            }
          ],
          "description": "azure subscription scan ruleset properties"
        }
      },
      "x-ms-discriminator-value": "AzureSubscription"
    },
    "AzureResourceGroupScanRulesetProperties": {
      "type": "object",
      "description": "azure resource group scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AzureResourceGroupScanRuleset": {
      "type": "object",
      "description": "azure resource group scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureResourceGroupScanRulesetProperties"
            }
          ],
          "description": "azure resource group scan ruleset properties"
        }
      },
      "x-ms-discriminator-value": "AzureResourceGroup"
    },
    "AzureSynapseWorkspaceScanRulesetProperties": {
      "type": "object",
      "description": "azure synapse workspace scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AzureSynapseWorkspaceScanRuleset": {
      "type": "object",
      "description": "azure synapse workspace scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSynapseWorkspaceScanRulesetProperties"
            }
          ],
          "description": "azure synapse workspace scan ruleset properties"
        }
      },
      "x-ms-discriminator-value": "AzureSynapseWorkspace"
    },
    "AzureSynapseScanRulesetProperties": {
      "type": "object",
      "description": "azure synapse scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AzureSynapseScanRuleset": {
      "type": "object",
      "description": "azure synapse scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSynapseScanRulesetProperties"
            }
          ],
          "description": "azure synapse scan ruleset properties"
        }
      },
      "x-ms-discriminator-value": "AzureSynapse"
    },
    "CustomFileType": {
      "type": "object",
      "description": "custom file type",
      "properties": {
        "builtInType": {
          "enum": [
            "AVRO",
            "ORC",
            "PARQUET",
            "JSON",
            "TXT",
            "XML",
            "Documents",
            "CSV",
            "PSV",
            "SSV",
            "TSV",
            "GZ",
            "DOC",
            "DOCM",
            "DOCX",
            "DOT",
            "ODP",
            "ODS",
            "ODT",
            "PDF",
            "POT",
            "PPS",
            "PPSX",
            "PPT",
            "PPTM",
            "PPTX",
            "XLC",
            "XLS",
            "XLSB",
            "XLSM",
            "XLSX",
            "XLT"
          ],
          "type": "string",
          "description": "The built-in file type of the custom file type.",
          "x-ms-enum": {
            "name": "FileExtensionsType",
            "modelAsString": true
          }
        },
        "customDelimiter": {
          "type": "string",
          "description": "The custom delimiter of the custom file type."
        }
      }
    },
    "CustomFileExtension": {
      "type": "object",
      "description": "custom file extension",
      "properties": {
        "customFileType": {
          "items": [
            {
              "$ref": "#/definitions/CustomFileType"
            }
          ],
          "description": "The custom file type of the custom file extension."
        },
        "description": {
          "type": "string",
          "description": "The description of the custom file extension."
        },
        "enabled": {
          "type": "boolean",
          "description": "The flag to indicate whether the custom file extension is enabled or not."
        },
        "fileExtension": {
          "type": "string",
          "description": "The file extension of the custom file extension."
        }
      }
    },
    "ScanningRule": {
      "type": "object",
      "description": "scanning rule",
      "properties": {
        "fileExtensions": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "enum": [
              "AVRO",
              "ORC",
              "PARQUET",
              "JSON",
              "TXT",
              "XML",
              "Documents",
              "CSV",
              "PSV",
              "SSV",
              "TSV",
              "GZ",
              "DOC",
              "DOCM",
              "DOCX",
              "DOT",
              "ODP",
              "ODS",
              "ODT",
              "PDF",
              "POT",
              "PPS",
              "PPSX",
              "PPT",
              "PPTM",
              "PPTX",
              "XLC",
              "XLS",
              "XLSB",
              "XLSM",
              "XLSX",
              "XLT"
            ],
            "type": "string",
            "description": "The file extensions of the scanning rule.",
            "x-ms-enum": {
              "name": "FileExtensionsType",
              "modelAsString": true
            }
          }
        },
        "customFileExtensions": {
          "uniqueItems": true,
          "type": "array",
          "description": "The custom file extensions of the scanning rule.",
          "items": {
            "$ref": "#/definitions/CustomFileExtension"
          }
        }
      }
    },
    "ScanningRuleScanRulesetProperties": {
      "type": "object",
      "description": "scanning rule scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ],
      "properties": {
        "scanningRule": {
          "items": [
            {
              "$ref": "#/definitions/ScanningRule"
            }
          ],
          "description": "The scanning rule of the scanning rule scan ruleset."
        }
      }
    },
    "AdlsGen1ScanRulesetProperties": {
      "type": "object",
      "description": "adls gen1 scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanningRuleScanRulesetProperties"
        }
      ]
    },
    "AdlsGen1ScanRuleset": {
      "type": "object",
      "description": "adls gen1 scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AdlsGen1ScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AdlsGen1"
    },
    "AdlsGen2ScanRulesetProperties": {
      "type": "object",
      "description": "adls gen 2 scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanningRuleScanRulesetProperties"
        }
      ]
    },
    "AdlsGen2ScanRuleset": {
      "type": "object",
      "description": "adls gen 2 scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AdlsGen2ScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AdlsGen2"
    },
    "AmazonAccountScanRulesetProperties": {
      "type": "object",
      "description": "amazon account scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AmazonAccountScanRuleset": {
      "type": "object",
      "description": "amazon account scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonAccountScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonAccount"
    },
    "AmazonS3ScanRulesetProperties": {
      "type": "object",
      "description": "amazon s3 scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanningRuleScanRulesetProperties"
        }
      ]
    },
    "AmazonS3ScanRuleset": {
      "type": "object",
      "description": "amazon s3 scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonS3ScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonS3"
    },
    "AmazonSqlScanRulesetProperties": {
      "type": "object",
      "description": "amazon sql scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AmazonSqlScanRuleset": {
      "type": "object",
      "description": "amazon sql scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonSqlScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonSql"
    },
    "AzureCosmosDbScanRulesetProperties": {
      "type": "object",
      "description": "azure cosmos db scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AzureCosmosDbScanRuleset": {
      "type": "object",
      "description": "azure cosmos db scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureCosmosDbScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureCosmosDb"
    },
    "AzureDataExplorerScanRulesetProperties": {
      "type": "object",
      "description": "azure data explorer scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AzureDataExplorerScanRuleset": {
      "type": "object",
      "description": "azure data explorer scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureDataExplorerScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureDataExplorer"
    },
    "AzureFileServiceScanRulesetProperties": {
      "type": "object",
      "description": "azure file service scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanningRuleScanRulesetProperties"
        }
      ]
    },
    "AzureFileServiceScanRuleset": {
      "type": "object",
      "description": "azure file service scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureFileServiceScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureFileService"
    },
    "AzureSqlDatabaseScanRulesetProperties": {
      "type": "object",
      "description": "azure sql db scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AzureSqlDatabaseScanRuleset": {
      "type": "object",
      "description": "azure sql db scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDatabaseScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDatabase"
    },
    "AmazonPostgreSqlScanRulesetProperties": {
      "type": "object",
      "description": "azure postgre sql scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AmazonPostgreSqlScanRuleset": {
      "type": "object",
      "description": "azure postgre sql scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonPostgreSqlScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonPostgreSql"
    },
    "AzurePostgreSqlScanRulesetProperties": {
      "type": "object",
      "description": "azure postgre sql scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AzurePostgreSqlScanRuleset": {
      "type": "object",
      "description": "azure postgre sql scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzurePostgreSqlScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzurePostgreSql"
    },
    "SqlServerDatabaseScanRulesetProperties": {
      "type": "object",
      "description": "sql server database scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "SqlServerDatabaseScanRuleset": {
      "type": "object",
      "description": "sql server database scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SqlServerDatabaseScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SqlServerDatabase"
    },
    "AzureSqlDatabaseManagedInstanceScanRulesetProperties": {
      "type": "object",
      "description": "azure sql db managed instance scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AzureSqlDatabaseManagedInstanceScanRuleset": {
      "type": "object",
      "description": "azure sql db managed instance scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDatabaseManagedInstanceScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDatabaseManagedInstance"
    },
    "AzureSqlDataWarehouseScanRulesetProperties": {
      "type": "object",
      "description": "azure sql data ware house scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AzureSqlDataWarehouseScanRuleset": {
      "type": "object",
      "description": "azure sql data ware house scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDataWarehouseScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDataWarehouse"
    },
    "AzureMySqlScanRulesetProperties": {
      "type": "object",
      "description": "azure mysql scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "AzureMySqlScanRuleset": {
      "type": "object",
      "description": "azure mysql scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureMySqlScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureMySql"
    },
    "AzureStorageScanRulesetProperties": {
      "type": "object",
      "description": "azure storage scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanningRuleScanRulesetProperties"
        }
      ]
    },
    "AzureStorageScanRuleset": {
      "type": "object",
      "description": "azure storage scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureStorageScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureStorage"
    },
    "TeradataScanRulesetProperties": {
      "type": "object",
      "description": "teradata scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanningRuleScanRulesetProperties"
        }
      ]
    },
    "TeradataScanRuleset": {
      "type": "object",
      "description": "teradata scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/TeradataScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "Teradata"
    },
    "OracleScanRulesetProperties": {
      "type": "object",
      "description": "Oracle scan rule set properties",
      "items": [
        {
          "$ref": "#/definitions/ScanningRuleScanRulesetProperties"
        }
      ]
    },
    "OracleScanRuleset": {
      "type": "object",
      "description": "Oracle scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/OracleScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "Oracle"
    },
    "SapS4HanaScanRulesetProperties": {
      "type": "object",
      "description": "Sap S4 Hana scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "SapS4HanaScanRuleset": {
      "type": "object",
      "description": "Sap S4 Hana scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SapS4HanaScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SapS4Hana"
    },
    "SapEccScanRulesetProperties": {
      "type": "object",
      "description": "Sap Ecc scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "SapEccScanRuleset": {
      "type": "object",
      "description": "Sap Ecc scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SapEccScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SapEcc"
    },
    "PowerBIScanRulesetProperties": {
      "type": "object",
      "description": "power bi scan ruleset properties",
      "items": [
        {
          "$ref": "#/definitions/ScanRulesetProperties"
        }
      ]
    },
    "PowerBIScanRuleset": {
      "type": "object",
      "description": "power bi scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/ScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/PowerBIScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "PowerBI"
    },
    "ResourceNameFilter": {
      "type": "object",
      "description": "Resource name filter",
      "properties": {
        "excludePrefixes": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includePrefixes": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CredentialReference": {
      "type": "object",
      "description": "Credential reference",
      "properties": {
        "referenceName": {
          "type": "string"
        },
        "credentialType": {
          "enum": [
            "AccountKey",
            "ServicePrincipal",
            "BasicAuth",
            "SqlAuth",
            "AmazonARN",
            "ConsumerKeyAuth",
            "DelegatedAuth",
            "ManagedIdentity"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CredentialType",
            "modelAsString": true
          }
        }
      }
    },
    "ResourceTypeFilter": {
      "type": "object",
      "description": "Resource type filter",
      "properties": {
        "scanRulesetName": {
          "type": "string",
          "description": "The name of the scan ruleset."
        },
        "scanRulesetType": {
          "enum": [
            "Custom",
            "System"
          ],
          "type": "string",
          "description": "The type of the scan ruleset.",
          "x-ms-enum": {
            "name": "ScanRulesetType",
            "modelAsString": true
          }
        },
        "resourceNameFilter": {
          "items": [
            {
              "$ref": "#/definitions/ResourceNameFilter"
            }
          ]
        },
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        }
      }
    },
    "ConnectedVia": {
      "type": "object",
      "description": "The integration runtime reference.",
      "properties": {
        "referenceName": {
          "type": "string",
          "description": "The reference name of the integration runtime."
        },
        "integrationRuntimeType": {
          "type": "string",
          "description": "The type of the integration runtime.",
          "readOnly": true
        }
      }
    },
    "ScanProperties": {
      "type": "object",
      "description": "scan properties",
      "properties": {
        "scanRulesetName": {
          "type": "string",
          "description": "The name of the scan ruleset."
        },
        "businessRuleSetName": {
          "type": "string",
          "description": "The name of the business rule set."
        },
        "scanRulesetType": {
          "enum": [
            "Custom",
            "System"
          ],
          "type": "string",
          "description": "The type of the scan ruleset.",
          "x-ms-enum": {
            "name": "ScanRulesetType",
            "modelAsString": true
          }
        },
        "collection": {
          "items": [
            {
              "$ref": "#/definitions/CollectionReference"
            }
          ],
          "description": "The collection reference of the scan."
        },
        "domain": {
          "type": "string",
          "description": "The domain of the scan."
        },
        "workers": {
          "format": "int32",
          "type": "integer",
          "description": "The number of workers of the scan."
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "description": "The creation time of the scan.",
          "readOnly": true
        },
        "lastModifiedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The last modified time of the scan.",
          "readOnly": true
        },
        "connectedVia": {
          "items": [
            {
              "$ref": "#/definitions/ConnectedVia"
            }
          ],
          "description": "The integration runtime reference of the scan."
        },
        "isPresetScan": {
          "type": "boolean",
          "description": "The flag to indicate whether the scan is a preset scan or not."
        },
        "isLiveViewEnabled": {
          "type": "boolean",
          "description": "The flag to indicate whether the live view is enabled or not."
        },
        "parallelScanCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of parallel scans."
        },
        "logLevel": {
          "type": "string",
          "description": "The log level of the scan."
        }
      }
    },
    "ExpandingResourceScanProperties": {
      "type": "object",
      "description": "expanding resource scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "resourceTypes": {
          "$ref": "#/definitions/ExpandingResourceScanPropertiesResourceTypes"
        },
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        }
      }
    },
    "ExpandingResourceScanPropertiesResourceTypes": {
      "type": "object",
      "description": "Resource types of scan properties in expanding resources",
      "properties": {
        "none": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azureSubscription": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azureResourceGroup": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azureSynapseWorkspace": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azureSynapse": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "adlsGen1": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "adlsGen2": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "amazonAccount": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "amazonS3": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "amazonSql": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azureCosmosDb": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azureDataExplorer": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azureFileService": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azureSqlDatabase": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "amazonPostgreSql": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azurePostgreSql": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "sqlServerDatabase": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azureSqlDatabaseManagedInstance": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azureSqlDataWarehouse": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azureMySql": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "azureStorage": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "teradata": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "oracle": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "sapS4Hana": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "sapEcc": {
          "$ref": "#/definitions/ResourceTypeFilter"
        },
        "powerBI": {
          "$ref": "#/definitions/ResourceTypeFilter"
        }
      }
    },
    "AzureSubscriptionCredentialScanProperties": {
      "type": "object",
      "description": "azure subscription credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ExpandingResourceScanProperties"
        }
      ]
    },
    "AzureSubscriptionCredentialScan": {
      "type": "object",
      "description": "azure subscription credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSubscriptionCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSubscriptionCredential"
    },
    "AzureSubscriptionMsiScanProperties": {
      "type": "object",
      "description": "Azure subscription MSI scan properties",
      "items": [
        {
          "$ref": "#/definitions/ExpandingResourceScanProperties"
        }
      ]
    },
    "AzureSubscriptionMsiScan": {
      "type": "object",
      "description": "Azure subscription MSI scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSubscriptionMsiScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSubscriptionMsi"
    },
    "AzureResourceGroupCredentialScanProperties": {
      "type": "object",
      "description": "azure resource group credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ExpandingResourceScanProperties"
        }
      ]
    },
    "AzureResourceGroupCredentialScan": {
      "type": "object",
      "description": "azure resource group credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureResourceGroupCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureResourceGroupCredential"
    },
    "AzureResourceGroupMsiScanProperties": {
      "type": "object",
      "description": "Azure resource group MSI scan properties",
      "items": [
        {
          "$ref": "#/definitions/ExpandingResourceScanProperties"
        }
      ]
    },
    "AzureResourceGroupMsiScan": {
      "type": "object",
      "description": "Azure resource group MSI scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureResourceGroupMsiScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureResourceGroupMsi"
    },
    "AzureSynapseWorkspaceCredentialScanProperties": {
      "type": "object",
      "description": "Azure synapse workspace credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ExpandingResourceScanProperties"
        }
      ]
    },
    "AzureSynapseWorkspaceCredentialScan": {
      "type": "object",
      "description": "Azure synapse workspace credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSynapseWorkspaceCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSynapseWorkspaceCredential"
    },
    "AzureSynapseWorkspaceMsiScanProperties": {
      "type": "object",
      "description": "Azure synapse workspace MSI scan properties",
      "items": [
        {
          "$ref": "#/definitions/ExpandingResourceScanProperties"
        }
      ]
    },
    "AzureSynapseWorkspaceMsiScan": {
      "type": "object",
      "description": "Azure synapse workspace MSI scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSynapseWorkspaceMsiScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSynapseWorkspaceMsi"
    },
    "AzureSynapseCredentialScanProperties": {
      "type": "object",
      "description": "Azure synapse credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ExpandingResourceScanProperties"
        }
      ]
    },
    "AzureSynapseCredentialScan": {
      "type": "object",
      "description": "Azure synapse credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSynapseCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSynapseCredential"
    },
    "AzureSynapseMsiScanProperties": {
      "type": "object",
      "description": "Azure synapse MSI scan properties",
      "items": [
        {
          "$ref": "#/definitions/ExpandingResourceScanProperties"
        }
      ]
    },
    "AzureSynapseMsiScan": {
      "type": "object",
      "description": "Azure synapse MSI scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSynapseMsiScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSynapseMsi"
    },
    "AdlsGen1CredentialScanProperties": {
      "type": "object",
      "description": "ADLS Gen1 credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        }
      }
    },
    "AdlsGen1CredentialScan": {
      "type": "object",
      "description": "ADLS Gen1 credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AdlsGen1CredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AdlsGen1Credential"
    },
    "AdlsGen1MsiScanProperties": {
      "type": "object",
      "description": "ADLS Gen1 MSI scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ]
    },
    "AdlsGen1MsiScan": {
      "type": "object",
      "description": "ADLS Gen1 MSI scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AdlsGen1MsiScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AdlsGen1Msi"
    },
    "AdlsGen2CredentialScanProperties": {
      "type": "object",
      "description": "ADLS Gen2 credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        }
      }
    },
    "AdlsGen2CredentialScan": {
      "type": "object",
      "description": "ADLS Gen2 credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AdlsGen2CredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AdlsGen2Credential"
    },
    "AdlsGen2MsiScanProperties": {
      "type": "object",
      "description": "ADLS Gen2 MSI scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ]
    },
    "AdlsGen2MsiScan": {
      "type": "object",
      "description": "ADLS Gen2 MSI scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AdlsGen2MsiScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AdlsGen2Msi"
    },
    "AmazonAccountCredentialScanProperties": {
      "type": "object",
      "description": "Amazon account credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ExpandingResourceScanProperties"
        }
      ]
    },
    "AmazonAccountCredentialScan": {
      "type": "object",
      "description": "Amazon account credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonAccountCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonAccountCredential"
    },
    "AmazonS3CredentialScanProperties": {
      "type": "object",
      "description": "Amazon S3 credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        },
        "roleARN": {
          "type": "string"
        },
        "isMauiScan": {
          "type": "boolean"
        }
      }
    },
    "AmazonS3CredentialScan": {
      "type": "object",
      "description": "Amazon S3 Credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonS3CredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonS3Credential"
    },
    "AmazonS3RoleARNScanProperties": {
      "type": "object",
      "description": "Amazon S3 role ARN scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        },
        "roleARN": {
          "type": "string",
          "description": "The role ARN of the scan."
        },
        "isMauiScan": {
          "type": "boolean",
          "description": "The flag to indicate whether the scan is a Maui scan or not."
        }
      }
    },
    "AmazonS3RoleARNScan": {
      "type": "object",
      "description": "Amazon S3 role ARN scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonS3RoleARNScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonS3RoleARN"
    },
    "AmazonSqlCredentialScanProperties": {
      "type": "object",
      "description": "Amazon SQL credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        },
        "serverEndpoint": {
          "type": "string",
          "description": "The server endpoint of the scan."
        },
        "databaseName": {
          "type": "string",
          "description": "The database name of the scan."
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "The port of the scan."
        },
        "vpcEndpointServiceName": {
          "type": "string",
          "description": "The VPC endpoint service name of the scan."
        }
      }
    },
    "AmazonSqlCredentialScan": {
      "type": "object",
      "description": "Amazon SQL credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonSqlCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonSqlCredential"
    },
    "AzureCosmosDbCredentialScanProperties": {
      "type": "object",
      "description": "Azure Cosmos DB credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        },
        "databaseName": {
          "type": "string"
        }
      }
    },
    "AzureCosmosDbCredentialScan": {
      "type": "object",
      "description": "Azure Cosmos DB credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureCosmosDbCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureCosmosDbCredential"
    },
    "AzureDataExplorerCredentialScanProperties": {
      "type": "object",
      "description": "Azure data Explorer credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        },
        "database": {
          "type": "string"
        }
      }
    },
    "AzureDataExplorerCredentialScan": {
      "type": "object",
      "description": "Azure data Explorer credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureDataExplorerCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureDataExplorerCredential"
    },
    "AzureDataExplorerMsiScanProperties": {
      "type": "object",
      "description": "Azure data Explorer MSI scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "database": {
          "type": "string"
        }
      }
    },
    "AzureDataExplorerMsiScan": {
      "type": "object",
      "description": "Azure data Explorer MSI scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureDataExplorerMsiScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureDataExplorerMsi"
    },
    "AzureFileServiceCredentialScanProperties": {
      "type": "object",
      "description": "Azure file service credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        },
        "shareName": {
          "type": "string"
        }
      }
    },
    "AzureFileServiceCredentialScan": {
      "type": "object",
      "description": "Azure file service credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureFileServiceCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureFileServiceCredential"
    },
    "AzureSqlScanProperties": {
      "type": "object",
      "description": "Azure SQL scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "serverEndpoint": {
          "type": "string"
        },
        "databaseName": {
          "type": "string"
        }
      }
    },
    "AzureSqlCredentialScanProperties": {
      "type": "object",
      "description": "Azure SQL credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/AzureSqlScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        }
      }
    },
    "AzureSqlDatabaseCredentialScanProperties": {
      "type": "object",
      "description": "Azure SQL database credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/AzureSqlCredentialScanProperties"
        }
      ]
    },
    "AzureSqlDatabaseCredentialScan": {
      "type": "object",
      "description": "Azure SQL database credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDatabaseCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDatabaseCredential"
    },
    "AzureSqlDatabaseMsiScanProperties": {
      "type": "object",
      "description": "Azure SQL database MSI scan properties",
      "items": [
        {
          "$ref": "#/definitions/AzureSqlScanProperties"
        }
      ]
    },
    "AzureSqlDatabaseMsiScan": {
      "type": "object",
      "description": "Azure SQL database MSI scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDatabaseMsiScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDatabaseMsi"
    },
    "AmazonPostgreSqlCredentialScanProperties": {
      "type": "object",
      "description": "Amazon Postgre sql credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        },
        "serverEndpoint": {
          "type": "string"
        },
        "databaseName": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "vpcEndpointServiceName": {
          "type": "string"
        }
      }
    },
    "AmazonPostgreSqlCredentialScan": {
      "type": "object",
      "description": "Amazon postgre sql credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonPostgreSqlCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonPostgreSqlCredential"
    },
    "AzurePostgreSqlCredentialScanProperties": {
      "type": "object",
      "description": "Azure Postgre sql credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        },
        "serverEndpoint": {
          "type": "string"
        },
        "databaseName": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "sslMode": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AzurePostgreSqlCredentialScan": {
      "type": "object",
      "description": "Azure postgre sql credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzurePostgreSqlCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzurePostgreSqlCredential"
    },
    "SqlServerDatabaseCredentialScanProperties": {
      "type": "object",
      "description": "SQL server database credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/AzureSqlCredentialScanProperties"
        }
      ]
    },
    "SqlServerDatabaseCredentialScan": {
      "type": "object",
      "description": "SQL server database credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SqlServerDatabaseCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SqlServerDatabaseCredential"
    },
    "AzureSqlDatabaseManagedInstanceCredentialScanProperties": {
      "type": "object",
      "description": "Azure SQL database managed instance credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/AzureSqlCredentialScanProperties"
        }
      ]
    },
    "AzureSqlDatabaseManagedInstanceCredentialScan": {
      "type": "object",
      "description": "Azure SQL database managed instance credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDatabaseManagedInstanceCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDatabaseManagedInstanceCredential"
    },
    "AzureSqlDatabaseManagedInstanceMsiScanProperties": {
      "type": "object",
      "description": "Azure SQL database managed instance MSI scan properties",
      "items": [
        {
          "$ref": "#/definitions/AzureSqlScanProperties"
        }
      ]
    },
    "AzureSqlDatabaseManagedInstanceMsiScan": {
      "type": "object",
      "description": "Azure SQL database managed instance MSI scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDatabaseManagedInstanceMsiScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDatabaseManagedInstanceMsi"
    },
    "AzureSqlDataWarehouseCredentialScanProperties": {
      "type": "object",
      "description": "Azure sql data ware house credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/AzureSqlCredentialScanProperties"
        }
      ]
    },
    "AzureSqlDataWarehouseCredentialScan": {
      "type": "object",
      "description": "Azure sql data ware house credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDataWarehouseCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDataWarehouseCredential"
    },
    "AzureSqlDataWarehouseMsiScanProperties": {
      "type": "object",
      "description": "Azure sql data ware house MSI scan properties",
      "items": [
        {
          "$ref": "#/definitions/AzureSqlScanProperties"
        }
      ]
    },
    "AzureSqlDataWarehouseMsiScan": {
      "type": "object",
      "description": "Azure sql data ware house MSI scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDataWarehouseMsiScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDataWarehouseMsi"
    },
    "AzureMySqlScanProperties": {
      "type": "object",
      "description": "Azure Mysql scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "serverEndpoint": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "databaseName": {
          "type": "string"
        },
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        }
      }
    },
    "AzureMySqlCredentialScanProperties": {
      "type": "object",
      "description": "Azure Mysql credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/AzureMySqlScanProperties"
        }
      ]
    },
    "AzureMySqlCredentialScan": {
      "type": "object",
      "description": "Azure Mysql credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureMySqlCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureMySqlCredential"
    },
    "MitiScanProperties": {
      "type": "object",
      "description": "Miti scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "maximumMemoryAllowedInGb": {
          "type": "string"
        },
        "mitiCache": {
          "type": "string"
        }
      }
    },
    "AzureStorageCredentialScanProperties": {
      "type": "object",
      "description": "Azure storage credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        }
      }
    },
    "AzureStorageCredentialScan": {
      "type": "object",
      "description": "Azure storage credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureStorageCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureStorageCredential"
    },
    "AzureStorageMsiScanProperties": {
      "type": "object",
      "description": "Azure storage MSI scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ]
    },
    "AzureStorageMsiScan": {
      "type": "object",
      "description": "Azure storage MSI scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureStorageMsiScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureStorageMsi"
    },
    "TeradataTeradataCredentialScanProperties": {
      "type": "object",
      "description": "Tera data credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/MitiScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "driverLocation": {
          "type": "string"
        },
        "storedProcedureDetails": {
          "type": "string"
        }
      }
    },
    "TeradataTeradataCredentialScan": {
      "type": "object",
      "description": "Teradata credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/TeradataTeradataCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "TeradataTeradataCredential"
    },
    "TeradataUserPassScanProperties": {
      "type": "object",
      "description": "Teradata user pass scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "TeradataUserPassScan": {
      "type": "object",
      "description": "Tera data user pass scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/TeradataUserPassScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "TeradataUserPass"
    },
    "TeradataTeradataUserPassScanProperties": {
      "type": "object",
      "description": "Tera data user pass scan properties",
      "items": [
        {
          "$ref": "#/definitions/MitiScanProperties"
        }
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "schema": {
          "type": "string"
        },
        "driverLocation": {
          "type": "string"
        }
      }
    },
    "TeradataTeradataUserPassScan": {
      "type": "object",
      "description": "Teradata user pass scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/TeradataTeradataUserPassScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "TeradataTeradataUserPass"
    },
    "OracleOracleCredentialScanProperties": {
      "type": "object",
      "description": "Oracle credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/MitiScanProperties"
        }
      ],
      "properties": {
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "driverLocation": {
          "type": "string"
        },
        "storedProcedureDetails": {
          "type": "string"
        }
      }
    },
    "OracleOracleCredentialScan": {
      "type": "object",
      "description": "Oracle credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/OracleOracleCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "OracleOracleCredential"
    },
    "OracleOracleUserPassScanProperties": {
      "type": "object",
      "description": "Oracle user pass scan properties",
      "items": [
        {
          "$ref": "#/definitions/MitiScanProperties"
        }
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "schema": {
          "type": "string"
        },
        "driverLocation": {
          "type": "string"
        }
      }
    },
    "OracleOracleUserPassScan": {
      "type": "object",
      "description": "Oracle user pass scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/OracleOracleUserPassScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "OracleOracleUserPass"
    },
    "SapS4HanaSapS4HanaCredentialScanProperties": {
      "type": "object",
      "description": "Sap S4 hana credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/MitiScanProperties"
        }
      ],
      "properties": {
        "clientId": {
          "type": "string"
        },
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        },
        "jCoLibraryPath": {
          "type": "string"
        }
      }
    },
    "SapS4HanaSapS4HanaCredentialScan": {
      "type": "object",
      "description": "Sap S4 hana credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SapS4HanaSapS4HanaCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SapS4HanaSapS4HanaCredential"
    },
    "SapS4HanaSapS4HanaUserPassScanProperties": {
      "type": "object",
      "description": "Sap S4 hana user pass scan properties",
      "items": [
        {
          "$ref": "#/definitions/MitiScanProperties"
        }
      ],
      "properties": {
        "clientId": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "jCoLibraryPath": {
          "type": "string"
        }
      }
    },
    "SapS4HanaSapS4HanaUserPassScan": {
      "type": "object",
      "description": "Sap S4 hana user pass scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SapS4HanaSapS4HanaUserPassScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SapS4HanaSapS4HanaUserPass"
    },
    "SapEccSapEccCredentialScanProperties": {
      "type": "object",
      "description": "Sap ecc credential scan properties",
      "items": [
        {
          "$ref": "#/definitions/MitiScanProperties"
        }
      ],
      "properties": {
        "clientId": {
          "type": "string"
        },
        "credential": {
          "items": [
            {
              "$ref": "#/definitions/CredentialReference"
            }
          ]
        },
        "jCoLibraryPath": {
          "type": "string"
        }
      }
    },
    "SapEccSapEccCredentialScan": {
      "type": "object",
      "description": "Sap Ecc credential scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SapEccSapEccCredentialScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SapEccSapEccCredential"
    },
    "SapEccSapEccUserPassScanProperties": {
      "type": "object",
      "description": "Sap Ecc user pass scan properties",
      "items": [
        {
          "$ref": "#/definitions/MitiScanProperties"
        }
      ],
      "properties": {
        "clientId": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "jCoLibraryPath": {
          "type": "string"
        }
      }
    },
    "SapEccSapEccUserPassScan": {
      "type": "object",
      "description": "Sap ecc user pass scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SapEccSapEccUserPassScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SapEccSapEccUserPass"
    },
    "PowerBIDelegatedScanProperties": {
      "type": "object",
      "description": "Power BI delegated scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "tenant": {
          "type": "string"
        },
        "authenticationType": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "includePersonalWorkspaces": {
          "type": "boolean"
        }
      }
    },
    "PowerBIDelegatedScan": {
      "type": "object",
      "description": "Power BI delegated scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/PowerBIDelegatedScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "PowerBIDelegated"
    },
    "PowerBIMsiScanProperties": {
      "type": "object",
      "description": "Power BI MSI scan properties",
      "items": [
        {
          "$ref": "#/definitions/ScanProperties"
        }
      ],
      "properties": {
        "includePersonalWorkspaces": {
          "type": "boolean"
        }
      }
    },
    "PowerBIMsiScan": {
      "type": "object",
      "description": "Power BI MSI scan",
      "items": [
        {
          "$ref": "#/definitions/Scan"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/PowerBIMsiScanProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "PowerBIMsi"
    },
    "AzureSubscriptionSystemScanRuleset": {
      "type": "object",
      "description": "Azure subscription system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSubscriptionScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSubscription"
    },
    "AzureResourceGroupSystemScanRuleset": {
      "type": "object",
      "description": "Azure resource group system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureResourceGroupScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureResourceGroup"
    },
    "AzureSynapseWorkspaceSystemScanRuleset": {
      "type": "object",
      "description": "Azure synapse workspace system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSynapseWorkspaceScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSynapseWorkspace"
    },
    "AzureSynapseSystemScanRuleset": {
      "type": "object",
      "description": "Azure Synapse System scan rule set",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSynapseScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSynapse"
    },
    "AdlsGen1SystemScanRuleset": {
      "type": "object",
      "description": "Adls Gen1 System scan rule set",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AdlsGen1ScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AdlsGen1"
    },
    "AdlsGen2SystemScanRuleset": {
      "type": "object",
      "description": "Adls Gen2 system scan rule set",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AdlsGen2ScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AdlsGen2"
    },
    "AmazonAccountSystemScanRuleset": {
      "type": "object",
      "description": "Amazon account system scan rule set",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonAccountScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonAccount"
    },
    "AmazonS3SystemScanRuleset": {
      "type": "object",
      "description": "Amazon S3 system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonS3ScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonS3"
    },
    "AmazonSqlSystemScanRuleset": {
      "type": "object",
      "description": "Amazon sql system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonSqlScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonSql"
    },
    "AzureCosmosDbSystemScanRuleset": {
      "type": "object",
      "description": "Azure cosmos DB system scan rule set",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureCosmosDbScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureCosmosDb"
    },
    "AzureDataExplorerSystemScanRuleset": {
      "type": "object",
      "description": "Azure data explorer system scan rule set",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureDataExplorerScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureDataExplorer"
    },
    "AzureFileServiceSystemScanRuleset": {
      "type": "object",
      "description": "Azure file service system scan rule set",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureFileServiceScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureFileService"
    },
    "AzureSqlDatabaseSystemScanRuleset": {
      "type": "object",
      "description": "Azure sql db system scan rule set",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDatabaseScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDatabase"
    },
    "AmazonPostgreSqlSystemScanRuleset": {
      "type": "object",
      "description": "Amazon postgre sql system scan rule set",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AmazonPostgreSqlScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AmazonPostgreSql"
    },
    "AzurePostgreSqlSystemScanRuleset": {
      "type": "object",
      "description": "Azure postgre sql system scan rule set",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzurePostgreSqlScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzurePostgreSql"
    },
    "SqlServerDatabaseSystemScanRuleset": {
      "type": "object",
      "description": "Sql server database system scan rule set",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SqlServerDatabaseScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SqlServerDatabase"
    },
    "AzureSqlDatabaseManagedInstanceSystemScanRuleset": {
      "type": "object",
      "description": "Azure sql database managed instance system scan rule set",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDatabaseManagedInstanceScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDatabaseManagedInstance"
    },
    "AzureSqlDataWarehouseSystemScanRuleset": {
      "type": "object",
      "description": "Azure sql data ware house system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureSqlDataWarehouseScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureSqlDataWarehouse"
    },
    "AzureMySqlSystemScanRuleset": {
      "type": "object",
      "description": "Azure Mysql system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureMySqlScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureMySql"
    },
    "AzureStorageSystemScanRuleset": {
      "type": "object",
      "description": "Azure storage system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/AzureStorageScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "AzureStorage"
    },
    "TeradataSystemScanRuleset": {
      "type": "object",
      "description": "Teradata system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/TeradataScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "Teradata"
    },
    "OracleSystemScanRuleset": {
      "type": "object",
      "description": "Oracle system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/OracleScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "Oracle"
    },
    "SapS4HanaSystemScanRuleset": {
      "type": "object",
      "description": "Sap S4 hana system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SapS4HanaScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SapS4Hana"
    },
    "SapEccSystemScanRuleset": {
      "type": "object",
      "description": "Sap ecc system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/SapEccScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "SapEcc"
    },
    "PowerBISystemScanRuleset": {
      "type": "object",
      "description": "Power BI system scan ruleset",
      "items": [
        {
          "$ref": "#/definitions/SystemScanRuleset"
        }
      ],
      "properties": {
        "properties": {
          "items": [
            {
              "$ref": "#/definitions/PowerBIScanRulesetProperties"
            }
          ]
        }
      },
      "x-ms-discriminator-value": "PowerBI"
    }
  },
  "parameters": {
    "api-version": {
      "in": "query",
      "name": "api-version",
      "description": "The api version to use.",
      "required": true,
      "type": "string",
      "x-ms-client-name": "ApiVersion",
      "x-ms-parameter-location": "client"
    },
    "endpoint": {
      "in": "path",
      "name": "endpoint",
      "description": "The scanning endpoint of your purview account. Example: https://{accountName}.purview.azure.com.",
      "required": true,
      "type": "string",
      "format": "url",
      "x-ms-parameter-location": "client",
      "x-ms-skip-url-encoding": true
    },
    "integrationRuntimeName": {
      "in": "path",
      "name": "integrationRuntimeName",
      "description": "The integration runtime name.",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
      "x-ms-parameter-location": "method"
    },
    "managedVirtualNetworkName": {
      "in": "path",
      "name": "managedVirtualNetworkName",
      "description": "The managed virtual network name. It is restricted to the values 'default' and 'defaultv2' for now.",
      "required": true,
      "type": "string",
      "enum": [
        "default",
        "defaultv2"
      ],
      "x-ms-enum": {
        "name": "ManagedVirtualNetworkName",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "managedPrivateEndpointName": {
      "in": "path",
      "name": "managedPrivateEndpointName",
      "description": "The managed private endpoint name.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 127,
      "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
      "x-ms-parameter-location": "method"
    },
    "azureKeyVaultName": {
      "in": "path",
      "name": "azureKeyVaultName",
      "description": "The azure key vault name.",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
      "x-ms-parameter-location": "method"
    },
    "classificationRuleName": {
      "in": "path",
      "name": "classificationRuleName",
      "description": "classification rule name",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
      "x-ms-parameter-location": "method"
    },
    "credentialName": {
      "in": "path",
      "name": "credentialName",
      "description": "The credential name.",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
      "x-ms-parameter-location": "method"
    },
    "dataSourceName": {
      "in": "path",
      "name": "dataSourceName",
      "description": "The dataSource name.",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
      "x-ms-parameter-location": "method"
    },
    "scanName": {
      "in": "path",
      "name": "scanName",
      "description": "The scan name.",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
      "x-ms-parameter-location": "method"
    },
    "runId": {
      "in": "path",
      "name": "runId",
      "description": "The scan run id.",
      "required": true,
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "pattern": "^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$",
      "x-ms-parameter-location": "method"
    },
    "scanRulesetName": {
      "in": "path",
      "name": "scanRulesetName",
      "description": "The scan ruleset name.",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
      "x-ms-parameter-location": "method"
    }
  }
}
